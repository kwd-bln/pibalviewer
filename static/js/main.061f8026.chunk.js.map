{"version":3,"sources":["actions/index.ts","containers/auth/Auth.tsx","containers/auth/Login.tsx","common/history.ts","components/SelectList.tsx","components/Glaph.tsx","components/ArrowLine.tsx","components/Svg.tsx","components/Table.tsx","components/TopPageForm.tsx","containers/TopPageContainer.ts","App.tsx","serviceWorker.ts","reducer.ts","common/api.ts","selectors/index.ts","sagas.ts","index.tsx","store.ts"],"names":["actionCreator","actionCreatorFactory","LoginAction","LogoutAction","InputUserAction","InputPassAction","StartLoadingAction","FinishLoadingAction","StartCreateTokenAction","StartFetchDatesAction","FinishFetchDatesAction","SetDateInfoListAction","StartFetchPibalDataAction","FinishFetchPibalDataAction","EnlargeAction","ShirinkAction","ToggleVisibleAction","SelectFlightAction","SetCurrentWindInfoListAction","Auth","props","auth_token","localStorage","this","token","setLocalStorageToken","console","log","loading","length","children","to","React","Component","withRouter","connect","appState","state","dispatch","handleOnClickSubmitButton","username","password","useForm","register","handleSubmit","errors","reset","Form","noValidate","onSubmit","data","Group","as","Row","controlId","Label","column","sm","xs","Col","span","offset","Control","name","placeholder","type","isInvalid","undefined","ref","required","Feedback","message","ButtonToolbar","Button","variant","history","createHashHistory","SelectList","options","dateInfoList","map","dateInfo","index","value","label","getYYYY_MM_DD","date","timePeriod","className","defaultValue","onChange","selectedOption","Glaph","canvasRef","useRef","useEffect","pointsList","windInfoList","forEach","info","points","currentX","currentY","winds","wind","rad","deg","Math","PI","spd","sin","cos","push","x","y","hours","minutes","visible","d","maxR","aryMax","a","b","max","p","hypot","reduce","getRFrom","ctx","canvas","current","width","height","getContext","scaleDistance","oneThirdOfMaxR","ceil","Number","toPrecision","getScaleDistanceFrom","scale","save","strokeStyle","fillStyle","beginPath","moveTo","arc","fill","canvasWidth","canvasHeight","lineTo","stroke","scaleLine","restore","font","textAlign","fillText","toString","scaleLineHeight","numOfPoints","hueStep","min","hue","hslStroke","hslFill","point","ArrowLine","arrow","position","id","g","d3","x0","y0","x1","y1","color","getInfoFrom","append","attr","line","key","Svg","style","Table","maxSpd","w","minSpd","maxHeightIndex","maxTimeIndex","arrowLineIndex","timeIndex","windIndex","selectedId","TopPageForm","handleOnLoadDates","Fragment","handleOnChangeValue","selected","fetchingDates","fetchingPibalData","handleClickEnlargeButton","handleClickShrinkButton","handleOnSelectToggleButton","getFullYear","getMonth","slice","getDate","App","path","component","Login","exact","TopPageContainer","Boolean","window","location","hostname","match","initialState","creatingToken","hasError","Reducer","reducerWithInitialState","case","pibalIndex","currentVisible","build","authorize","user","pass","body","JSON","stringify","postUser","postPass","fetch","method","mode","cache","credentials","headers","then","res","json","success","setItem","error","catch","fetchDetes","obj","dateList","apiDate","getDateFrom","timing","sort","getTime","fetchWindInfo","yyyymmdd","m","getYYYYMMDD","infos","alt","degree","speed","year","month","day","Date","getToken","getDateInfoList","authSaga","pageSaga","fetchDatesSaga","selectFlightSaga","rootSaga","take","action","payload","call","put","clear","select","pibalDataInfo","fork","takeEvery","store","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","router","connectRouter","applyMiddleware","logger","routerMiddleware","run","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.061f8026.chunk.js","sourcesContent":["import { actionCreatorFactory } from '../../node_modules/typescript-fsa';\nimport { ApiData } from '../reducer'\nimport { DateInfo, PibalDataInfo } from '../states/IPibalDataList'\n\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN'\nexport const START_CREATE_TOKEN = 'START_CREATE_TOKEN'\nexport const FINISH_CREATE_TOKEN = 'FINISH_CREATE_TOKEN'\nexport const START_FETCH_DATES = 'START_FETCH_DATES'\nexport const FINISH_FETCH_DATES = 'FINISH_FETCH_DATES'\nexport const SET_DATES = 'SET_DATES'\nexport const SELECT_FLIGHT = 'SELECT_FLIGHT'\nexport const SET_WIND = 'SET_WIND'\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT'\n\nconst actionCreator = actionCreatorFactory()\n\nexport const LoginAction = actionCreator<string>(REQUEST_LOGIN)\n\nexport const LogoutAction = actionCreator(REQUEST_LOGOUT)\n\nexport const InputUserAction = actionCreator<string>('INPUT_USER')\n\nexport const InputPassAction = actionCreator<string>('INPUT_PASS')\n\nexport const StartLoadingAction = actionCreator('START_LOADING')\n\nexport const FinishLoadingAction = actionCreator('FINISH_LOADING')\n\nexport const StartCreateTokenAction = actionCreator<{username: string, password: string}>('START_CREATE_TOKEN')\n\nexport const FinishCreateTokenAction = actionCreator('FINISH_CREATE_TOKEN')\n\nexport const StartFetchDatesAction = actionCreator(START_FETCH_DATES)\n\nexport const FinishFetchDatesAction = actionCreator(FINISH_FETCH_DATES)\n\nexport const SetDateInfoListAction = actionCreator<DateInfo[]>(SET_DATES)\n\nexport const StartFetchPibalDataAction = actionCreator('START_FETCH_PIBALDATA')\n\nexport const FinishFetchPibalDataAction = actionCreator('FINISH_FETCH_PIBALDATA')\n\nexport const EnlargeAction = actionCreator('ACTION_ENLARGE')\n\nexport const ShirinkAction = actionCreator('ACTION_SHRINK')\n\nexport const ToggleVisibleAction = actionCreator<number>('TOGGLE_VISIBLE')\n\nexport const SelectFlightAction = actionCreator<number>('SELECT_FLIGHT')\n\nexport const GetDataErrorAction = actionCreator<boolean>('GET_DATA_ERROR')\n\nexport const LoadDataAction = actionCreator<boolean>('LOAD_DATA_ERROR')\n\nexport const FetchedDataSuccessAction = actionCreator<ApiData>('FETCHED_DATA')\n\nexport const SetCurrentWindInfoListAction = actionCreator<PibalDataInfo>(SET_WIND)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../store\"\nimport { withRouter } from 'react-router'\nimport { Dispatch } from 'redux'\nimport { LoginAction } from \"../../actions/index\";\n\nimport { Redirect, Route } from 'react-router-dom'\nimport * as H from 'history';\n\ninterface OwnProps {\n  loading: boolean\n  history: H.History\n  token: string\n}\n\ninterface AuthHandler {\n  setLocalStorageToken(auth_token: string): void\n}\n\nclass Auth extends React.Component<OwnProps&AuthHandler> {\n  constructor(props: OwnProps&AuthHandler) {\n    super(props)\n  }\n\n  render() {\n    const auth_token = localStorage.auth_token\n    if (auth_token && !this.props.token) {\n      // localStorageにtokenがあって、stateにtokenがない場合、tokenをsetする\n      this.props.setLocalStorageToken(auth_token) \n    }\n    console.log(\"authRender\", this.props.loading, this.props.token.length > 0)\n    if (this.props.loading) {\n      return <div>loading</div>\n    } else {\n      if (this.props.token.length || auth_token) {\n        console.log(\"Go to Top page\")\n        return (\n          <Route children={this.props.children} />\n        )\n      } else {\n        console.log(\"Go to Login page\")\n        return (\n          <Redirect to={'/login'} />\n        )\n      }\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): AuthHandler => {\n  return {\n    setLocalStorageToken: (auth_token: string) => { dispatch(LoginAction(auth_token)) }\n  }\n}\n\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    token: appState.state.token,\n    loading: appState.state.loading\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth))","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\"\nimport { Dispatch } from \"redux\"\nimport { AppState } from \"../../store\"\nimport { StartCreateTokenAction } from \"../../actions/index\";\nimport { Form, Row, Col, Button, ButtonToolbar } from 'react-bootstrap'\n\ntype FormData = {\n  username: string\n  password: string\n}\n\nexport interface LoginHandler {\n  handleOnClickSubmitButton(username: string, password: string): void\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): LoginHandler => {\n  return {\n    handleOnClickSubmitButton: (username: string, password: string) => { dispatch(StartCreateTokenAction({ username, password })) }\n  }\n}\n\nconst Login: React.FC<LoginHandler> = (props) => {\n  const { register, handleSubmit, errors, reset } = useForm<FormData>()\n\n  const handleOnSubmit = (data: FormData) => {\n    console.log(data.password, data.username)\n    props.handleOnClickSubmitButton(data.username, data.password)\n    reset()\n  }\n\n  return (\n    <Form noValidate onSubmit={handleSubmit(handleOnSubmit)}>\n      <Form.Group as={Row} controlId={'username'}>\n        <Form.Label column sm={3} xs={12}>{'ユーザー名'}</Form.Label>\n        <Col xs={{ span: 10, offset: 1 }} sm={7}>\n          <Form.Control\n            name={'username'}\n            placeholder={'username'}\n            type={'text'}\n            isInvalid={errors.username !== undefined}\n            ref={register({\n              required: \"入力が必要です！\"\n            })}\n          />\n          {\n            errors.username &&\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.username.message}\n            </Form.Control.Feedback>\n          }\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId={'password'}>\n        <Form.Label column sm={3} xs={12}>{'パスワード'}</Form.Label>\n        <Col xs={{ span: 10, offset: 1 }} sm={7}>\n          <Form.Control\n            name={'password'}\n            placeholder={'password'}\n            type={'password'}\n            isInvalid={errors.password !== undefined}\n            ref={register({\n              required: \"入力が必要です！\"\n            })}\n          />\n        </Col>\n        {\n          errors.password &&\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.password.message}\n          </Form.Control.Feedback>\n        }\n      </Form.Group>\n      <Form.Group>\n        <Col sm={5}>\n          <ButtonToolbar>\n            <Button variant={'primary'} type=\"submit\" >ログイン</Button>\n          </ButtonToolbar>\n        </Col>\n      </Form.Group>\n    </Form>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import { createHashHistory } from 'history';\n\nconst history = createHashHistory();\nexport default history;","import React from 'react'\nimport Select from 'react-select'\nimport { ValueType } from \"react-select\";\nimport { DateInfo } from './../states/IPibalDataList'\nimport { getYYYY_MM_DD } from './../containers/TopPageContainer'\n\ntype OptionType = { label: string; value: number };\n\ntype Props = {\n  dateInfoList: DateInfo[]\n  onChange: (value: number) => void\n}\n\nconst SelectList: React.FC<Props> = (props) => {\n  const options: OptionType[] = props.dateInfoList.map((dateInfo, index) => {\n    return {\n      value: index,\n      label: `${getYYYY_MM_DD(dateInfo.date)} - ${dateInfo.timePeriod}`\n    }\n  })\n  if (!options.length) return <p>nodata</p>\n  \n  return (\n    <div className=\"select-dates-div\">\n      <Select options={options} defaultValue={options[0]} className='dates-select' onChange={(selectedOption: ValueType<OptionType>) => {\n        const value = (selectedOption as OptionType).value\n        props.onChange(value)\n      }} />\n    </div>\n  )\n}\n\nexport default SelectList","import React, { useEffect, useRef } from \"react\";\n\nimport { WindInfo } from \"../states/IPibalDataList\"\n\ntype Point = {\n  x: number,\n  y: number\n}\n\ntype PointsInfo = {\n  hours: number,\n  minutes: number,\n  visible: boolean,\n  points: Point[]\n}\n\ninterface Props {\n  windInfoList: WindInfo[]\n}\n\nconst Glaph: React.FC<Props> = (props) => {\n  const canvasRef = useRef(null);\n\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    canvas.width = 480;\n    canvas.height = 480;\n\n    return canvas.getContext('2d');\n  };\n\n  const getCanvasWidth = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.width\n  }\n\n  const getCanvasHeight = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.height\n  }\n\n  useEffect(() => {    \n    // どこの点をとるかの計算\n    let pointsList: PointsInfo[] = []\n\n    // 時間ごとにpointsに直していく\n    const ktToMPer60s = 30.8667 // x (kt) => ktToMPer60s * x (m/100s) で変換\n    props.windInfoList.forEach( info => {\n      let points: Point[] = []\n      let currentX = 0\n      let currentY = 0\n\n      info.winds.forEach( wind => {\n        const rad: number = wind.deg * (Math.PI / 180);\n        currentX += wind.spd * ktToMPer60s * Math.sin(rad)\n        currentY += wind.spd * ktToMPer60s * Math.cos(rad)\n        points.push({\n          x: currentX,\n          y: currentY\n        })\n      })\n\n      pointsList.push({\n        hours: info.hours,\n        minutes: info.minutes,\n        visible: info.visible,\n        points: points\n      })\n    })\n\n    console.log(props.windInfoList.map(d => d.winds) )\n\n    // 最も遠い点の距離の計算\n    const maxR = getRFrom(pointsList)\n\n    /*  */\n    const ctx: CanvasRenderingContext2D = getContext();\n    const originX: number = 240\n    const originY: number = 240\n\n    // scaleDistance * 3 = 144 になるように\n    const scaleDistance = getScaleDistanceFrom(maxR)\n\n    const scaleLine = 48\n    const scale = scaleLine / scaleDistance\n    console.log(\"maxR = \", maxR, \"scale\", scale, scaleDistance)\n\n    // 原点の描画\n    ctx.save();\n    ctx.strokeStyle = \"#707070\";\n    ctx.fillStyle = \"#707070\";\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 軸線の描画\n    const padding = 50\n    const canvasWidth = getCanvasWidth() - padding\n    const canvasHeight = getCanvasHeight() - padding\n    ctx.beginPath();\n    ctx.moveTo(padding, originY);\n    ctx.lineTo(canvasWidth, originY);\n    ctx.moveTo(originX, padding);\n    ctx.lineTo(originX, canvasHeight);\n    // 斜め線\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(canvasWidth, canvasHeight);\n    ctx.moveTo(canvasWidth, padding);\n    ctx.lineTo(padding, canvasHeight);\n    ctx.stroke()\n\n    // scale円の描画\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, scaleLine, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 2, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 3, 0, Math.PI * 2)\n    ctx.stroke()\n\n    // scaleの描画\n    ctx.beginPath()\n    const scaleLineHeight = 10\n    ctx.moveTo(canvasWidth * 0.3, canvasHeight)\n    ctx.lineTo(canvasWidth * 0.3, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight)\n    ctx.stroke()\n    ctx.restore();\n\n    // scaleのテキストの描画\n    ctx.save();\n    ctx.fillStyle = \"black\"\n    ctx.font = \"10px\"\n    ctx.textAlign = \"center\"\n    ctx.fillText(scaleDistance.toString() + 'm',\n      canvasWidth * 0.3 + scaleLine * 0.5,\n      canvasHeight + scaleLineHeight * 2.5)\n    ctx.restore()\n\n    //　各点のプロット\n    let numOfPoints = pointsList.length\n    console.log(pointsList)\n    const hueStep = Math.min(360 / numOfPoints, 40)\n    pointsList.forEach((data, index) => {\n      if (data.visible) {\n        const points = data.points\n        // 色の決定\n        const hue = Math.ceil(hueStep * index)\n        const hslStroke = \"hsl(\" + hue + \", 100%, 50%)\";\n        const hslFill = \"hsl(\" + hue + \", 80%, 45%)\";\n\n        // 一つの時間のpibaldataを描画\n        let x = originX\n        let y = originY\n        points.forEach(point => {\n          ctx.save();\n          ctx.strokeStyle = hslStroke;\n          ctx.fillStyle = hslFill;\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          x = originX + point.x * scale\n          y = originY - point.y * scale\n          ctx.lineTo(x, y);\n          ctx.stroke();\n          ctx.moveTo(x, y);\n          ctx.arc(x, y, 3, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        })\n      }\n    })\n\n    // scaleのプロット\n  })\n\n  return (\n    <div className=\"rect-wrap\">\n      <canvas className=\"pibal-glaph\" ref={canvasRef} />\n    </div>\n  )\n\n}\n\n\n// pointsの集合であるpointsListから最大半径を求めるための関数\nfunction getRFrom(pointsList: PointsInfo[]): number {\n  const aryMax = function(a: number, b:number): number {return Math.max(a, b)}\n  return pointsList\n  .map(data => data.points.map(p => Math.hypot(p.x, p.y)).reduce(aryMax))\n  .reduce(aryMax, 1)\n}\n\n// scale円の単位距離を導出\nfunction getScaleDistanceFrom(maxR: number): number {\n  const oneThirdOfMaxR: number = Math.ceil(maxR / 3.2)\n  \n  // 3 * scale = maxDist / 1.1 になるようにする\n  const ScaleDistance = Math.max(Number(oneThirdOfMaxR.toPrecision(2)), 10)\n  return ScaleDistance\n}\n\nexport default Glaph","import React, { useEffect } from \"react\"  \nimport * as d3 from 'd3'\n\nexport type Arrow = {\n  length: number,\n  rad: number,\n  hue: number,\n}\n\ntype ArrowInfo = {\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  color: string\n}\n\nexport type Position = {\n  x: number,\n  y: number\n}\n\nfunction getInfoFrom(arrow: Arrow): ArrowInfo {\n  const cos = Math.cos(arrow.rad)\n  const sin = Math.sin(arrow.rad)\n  return {\n    x0: - arrow.length * sin / 2,\n    y0: arrow.length * cos / 2,\n    x1: arrow.length * sin / 2,\n    y1: - arrow.length * cos / 2,\n    color: `hsl(${arrow.hue},50%,50%)`\n  }\n}\n\nexport const ArrowLine: React.FC<{ arrow: Arrow, position: Position, id: string }> = ({ arrow, position, id}) => {  \n  const className = `arrow-${id}`\n  //d3-----------------------------  \n  useEffect(() => {\n    const g = d3.select(`.${className}`)\n    const info = getInfoFrom(arrow)\n\n    // defs/markerという構造で、gの下に矢印を定義\n    let marker =g.append(\"defs\").append(\"marker\")\n    .attr(\"id\", `arrowhead-${id}`)\n    .attr(\"refX\", 1)\n    .attr(\"refY\", 2)\n    .attr(\"markerWidth\", 4)\n    .attr(\"markerHeight\", 4)\n    .attr(\"orient\", \"auto\")\n\n    // 矢印の形をpathで定義\n    marker.append(\"path\")\n      .attr(\"d\", \"M 0,0 V 4 L4,2 Z\")\n      .attr(\"fill\", info.color)\n\n    let line = d3.line()\n    .x(data => data[0])\n    .y(data => data[1])\n\n    g.append('path')\n    .attr('d', line([[info.x0, info.y0],[info.x1, info.y1]])!)\n    .attr('stroke', info.color)\n    .attr('stroke-width', 2)\n    .attr('fill', 'none')\n    .attr('marker-end', `url(#arrowhead-${id})`)\n    .attr(\"transform\", `translate(${position.x}, ${position.y})`)  \n  })  \n  //-------------------------------  \n\n  return (  \n    <g className={className} key={id}></g>\n  )  \n}  ","import React from 'react'  \n\n// 縦、横を選択できるSVG。わざわざd3を使う必要ないと思って使わなかった。  \nconst Svg: React.FC<{ width: number, height: number }> = ({ children, width, height }) => (  \n  <svg style={{ width: width, height: height }}>  \n    {children}  \n  </svg>  \n)\n\nexport default Svg","import React from \"react\";\nimport { ArrowLine, Arrow, Position } from \"./ArrowLine\"\n\nimport { WindInfo } from \"../states/IPibalDataList\"\nimport Svg from \"./Svg\"\n\ninterface Props {\n  selectedId: number,\n  windInfoList: WindInfo[]\n}\n\nexport const Table: React.FC<Props> = (props) => {\n  if (!props.windInfoList.length) {\n    return null\n  }\n  \n  // 矢印の最小・最大長さ\n  const minLength = 4\n  const maxLength = 15\n\n  // min/max Lengthに対応するmin/max speed\n  const maxSpd = Math.max(...props.windInfoList.map(info => Math.max(...info.winds.map(w => w.spd))))\n  const minSpd = Math.min(...props.windInfoList.map(info => Math.min(...info.winds.map(w => w.spd))))\n\n  // 配置する位置を計算するための準備\n  const maxHeightIndex = Math.max(...props.windInfoList.map(info => info.winds.length))\n  const maxTimeIndex = props.windInfoList.length\n  const boxLengthPerArrow = 30 // 1つ1つの矢印の間隔\n  const offset = 10 // 端の矢印の表示のoffset\n\n  // 矢印の表示数による\n  const width = boxLengthPerArrow * maxTimeIndex\n  const height = boxLengthPerArrow * maxHeightIndex\n  let arrowLineIndex = 0\n\n  const spdToLength = (spd: number): number => { return minLength + (maxLength - minLength) / (maxSpd - minSpd) * spd}\n\n  return (  \n    <Svg width={width} height={height}>\n      {props.windInfoList.map((info, timeIndex) => {\n        const winds = info.winds\n        return winds.map((wind, windIndex) => {\n          arrowLineIndex ++\n          const arrow: Arrow = {\n            length: spdToLength(wind.spd),\n            rad: wind.deg / 180 * Math.PI,\n            hue: wind.deg\n          }\n          const position: Position = {\n            x: boxLengthPerArrow * timeIndex + offset,\n            y: height - boxLengthPerArrow * windIndex - offset\n          }\n          return <ArrowLine arrow={arrow} position={position} id={`${props.selectedId}-${arrowLineIndex}`} key={arrowLineIndex}/>\n        })\n      })}\n    </Svg>  \n  )  \n}","import React from 'react'\nimport { TopPageHandler } from '../containers/TopPageContainer';\nimport SelectList from './SelectList'\nimport Glaph from './Glaph'\nimport { PibalDataInfo, DateInfo } from '../states/IPibalDataList'\nimport { Table } from './Table';\n\ninterface OwnProps {\n\ttoken: string\n\tloading: boolean\n\tfetchingDates: boolean\n\tfetchingPibalData: boolean\n  scale: number\n  selected?: PibalDataInfo\n  dateInfoList: DateInfo[]\n}\ntype Props = OwnProps & TopPageHandler\nexport class TopPageForm extends React.Component<Props> {\n\tcomponentDidMount() {\n\t\tif (this.props.token) {\n\t\t\tif (this.props.dateInfoList.length === 0) {\n\t\t\t\t// dateInfoListがからのとき、APIを叩く\n\t\t\t\tconsole.log(\"fetch LoadDates\")\n\t\t\t\tthis.props.handleOnLoadDates()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<SelectList dateInfoList={this.props.dateInfoList} onChange={this.props.handleOnChangeValue}/>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.props.selected) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Glaph windInfoList={this.props.selected.windInfoList}/>\n\t\t\t\t\t\t\t\t<Table selectedId={this.props.selected.id} windInfoList={this.props.selected.windInfoList}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t\t{/* <ShowState inputValue={this.props.inputValue} selectedValue={this.props.selectedValue} clickCount={this.props.clickCount} /> */}\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction } from \"../actions/index\";\nimport { StartFetchDatesAction } from \"../actions/index\";\nimport { TopPageForm } from \"../components/TopPageForm\";\nimport { AppState } from \"../store\"\n\nexport interface TopPageHandler {\n\thandleClickEnlargeButton(): void\n\thandleClickShrinkButton(): void\n\thandleOnChangeValue(value: number): void\n\thandleOnSelectToggleButton(value: number): void\n\thandleOnLoadDates(): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n\treturn {\n\t\ttoken: appState.state.token,\n\t\tfetchingDates: appState.state.fetchingDates,\n\t\tfetchingPibalData: appState.state.fetchingPibalData,\n\t\tscale: appState.state.scale,\n\t\tselected: appState.state.selected,\n\t\tdateInfoList: appState.state.dateInfoList\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): TopPageHandler => {\n\treturn {\n\t\thandleClickEnlargeButton: () => { dispatch(EnlargeAction()) },\n\t\thandleClickShrinkButton: () => { dispatch(ShirinkAction()) },\n\t\thandleOnChangeValue: (value: number) => { dispatch(SelectFlightAction(value)) },\n\t\thandleOnSelectToggleButton: (value: number) => { dispatch(ToggleVisibleAction(value)) },\n\t\thandleOnLoadDates: () => { dispatch(StartFetchDatesAction()) },\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopPageForm)\n\nexport function getYYYY_MM_DD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + \"/\" + m + \"/\" + d\n  return result\n}","import React from 'react';\nimport './App.css';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Auth from './containers/auth/Auth';\nimport Login from './containers/auth/Login';\nimport history from './common/history';\nimport './css/bootstrap.min.css';\n\nimport TopPageContainer from './containers/TopPageContainer';\n\nconst App: React.FC = () => {\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Auth>\n          <Route exact path=\"/\" component={TopPageContainer} />\n        </Auth>\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { reducerWithInitialState } from '../node_modules/typescript-fsa-reducers';\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SetCurrentWindInfoListAction } from './actions/index';\nimport { LoginAction, StartLoadingAction, FinishLoadingAction, InputPassAction, InputUserAction, StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, FinishFetchPibalDataAction, LogoutAction} from './actions/index'\nimport { SetDateInfoListAction } from './actions/index';\nimport IState from './states/IState'\n\nexport const initialState: IState = {\n\ttoken: \"\",\n\tloading: false,\n\tcreatingToken: false,\n\tfetchingDates: false,\n\tfetchingPibalData: false,\n\thasError: false,\n\tscale: 1,\n\tselected: undefined,\n\tdateInfoList: []\n}\n\nexport type ApiData = {\n\thours: number\n  minutes: number\n  winds: WindApi[]\n}\n\ntype WindApi = {\n  height: number,\n  degree: number,\n  speed: number\n}\n\n\nconst maxScale = 2\nconst minScale = 0.5\n\nexport const Reducer = reducerWithInitialState(initialState)\n\t.case(StartLoadingAction, (state) => {\n\t\tconst loading = true\n\t\treturn { ...state, loading }\n\t})\n\t.case(FinishLoadingAction, (state) => {\n\t\tconst loading = false\n\t\treturn { ...state, loading }\n\t})\n\t.case(InputUserAction, (state, username) => {\n\t\treturn { ...state, username }\n\t})\n\t.case(InputPassAction, (state, password) => {\n\t\treturn { ...state, password }\n\t})\n\t.case(StartFetchDatesAction, state => {\n\t\tconst fetchingDates = true\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(FinishFetchDatesAction, state => {\n\t\tconst fetchingDates = false\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(StartFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = true\n\t\treturn { ...state, fetchingPibalData }\n\t})\n\t.case(FinishFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = false\n\t\treturn { ...state, fetchingPibalData}\n\t})\n\t// 拡大する\n\t.case(EnlargeAction, (state) => {\n\t\tlet scale = Math.min(state.scale + 0.1, maxScale)\n\t\treturn { ...state, scale }\n\t})\n\t// 縮小する\n\t.case(ShirinkAction, (state) => {\n\t\tlet scale = Math.max(state.scale - 0.1, minScale)\n\t\treturn { ...state, scale }\n\t})\n\t// Datesを取ってきてstateに入れる。\n\t.case(SetDateInfoListAction, (state, dateInfoList) => {\n\t\treturn { ...state, dateInfoList }\n\t})\n\t// pibalDateを取ってきてcurrentに入れる。\n\t.case(SetCurrentWindInfoListAction, (state, selected) => {\n\t\treturn { ...state, selected }\n\t})\n\t// そのパイバルデータを見せる or 見せない\n\t.case(ToggleVisibleAction, (state, pibalIndex) => {\n\t\tlet selected = state.selected\n\t\tif (selected) {\n\t\t\tlet currentVisible = selected.windInfoList[pibalIndex].visible\n\t\t\tselected.windInfoList[pibalIndex].visible = !currentVisible\n\t\t\treturn { ...state, selected}\n\t\t}\n\t\treturn state\n\t})\n\t// login\n\t.case(LoginAction, (state, token) => {\n\t\treturn { ...state, token } \n\t})\n\t// logout\n\t.case(LogoutAction, state => {\n\t\tconst token = \"\"\n\t\treturn { ...state, token } \n\t})\n\t.build()","import { DateInfo, WindInfo, Wind } from \"./../states/IPibalDataList\"\n\ntype WindApi = {\n\theight: number,\n\tdegree: number,\n\tspeed: number\n}\n\ntype ApiData = {\n\thours: number\n\tminutes: number\n\twinds: WindApi[]\n}\n\ntype ApiDateAndTiming = {\n\tdate: string\n\ttiming: string\n}\n\nexport function authorize(user: string, pass: string): Promise<{token?: string, error?: string}> {\n  const body = JSON.stringify({postUser: user, postPass: pass})\n  console.log(\"authorize\", body)\n\n  return fetch(\"https://oval-silicon-280513.an.r.appspot.com/api/v1/authenticate\", {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"omit\",\n    headers:{\n      'content-type': 'application/json; charset=UTF-8'\n    },\n    body})\n    .then(res => res.json())\n    .then(json => {\n      if (json.success) {\n        localStorage.setItem(\"auth_token\", json.token)\n        return { token: json.token }\n      }\n      return { error: 'such user is not exist'}\n    })\n    .catch(error => {\n      console.log('fetch error: ', error)\n      return { error }\n    })\n}\n\nexport function fetchDetes(token: string): Promise<{dateList?: DateInfo[], error?: string}> {\n  return fetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/dates', {\n    headers: { 'x-access-token': token }\n  }).then(res => res.json())\n  .then(obj => {\n    const apiDateList: ApiDateAndTiming[] = obj.data\n    let dateList: DateInfo[] = apiDateList.map((apiDate, index) => {\n      return {\n        id: index,\n        date: getDateFrom(apiDate.date),\n        timePeriod: apiDate.timing\n      }\n    })\n    dateList.sort((a, b) => b.date.getTime() - a.date.getTime())\n    return { dateList }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nexport function fetchWindInfo(token: string, date: Date, timePeriod: string): Promise<{windInfoList?: WindInfo[], error?: string}> {\n  const yyyymmdd = getYYYYMMDD(date)\n  return fetch(`https://oval-silicon-280513.an.r.appspot.com/api/v1/${yyyymmdd}/${timePeriod}`, {\n\t\theaders: { 'x-access-token': token }\n  })\n  .then(res => res.json())\n  .then(obj => {\n    if (obj.data.length) {\n      const windInfoList: WindInfo[] = []\n      const infos: ApiData[] = obj.data[0].infos\n      infos.forEach(info => {\n\t\t\t\tconst hours = info.hours\n\t\t\t\tconst minutes = info.minutes\n\t\t\t\tconst winds: Wind[] = info.winds.map(w => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\talt: w.height,\n\t\t\t\t\t\tdeg: w.degree,\n\t\t\t\t\t\tspd: w.speed\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\twindInfoList.push({\n\t\t\t\t\thours: hours,\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\twinds: winds,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n      })\n      return { windInfoList }\n    }\n    return { error: 'no such data' }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nfunction getYYYYMMDD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + m + d\n  return result\n}\n\nfunction getDateFrom(yyyymmdd: string): Date {\n\tconst year = Number(yyyymmdd.slice(0, 4))\n\tconst month = Number(yyyymmdd.slice(4, 6))\n\tconst day = Number(yyyymmdd.slice(6))\n\treturn new Date(year, month, day)\n}","import { AppState } from '../store'\nimport { DateInfo } from '../states/IPibalDataList'\n\nexport const getToken = (state: AppState): string => state.state.token\n\nexport const getDateInfoList = (state: AppState): DateInfo[] => state.state.dateInfoList","import { push } from 'react-router-redux'\nimport { take, put, fork, call, select, takeEvery } from 'redux-saga/effects'\nimport { authorize, fetchDetes, fetchWindInfo } from './common/api'\nimport { REQUEST_LOGIN, REQUEST_LOGOUT, START_CREATE_TOKEN, FINISH_CREATE_TOKEN, START_FETCH_DATES, FINISH_FETCH_DATES, SET_DATES, SELECT_FLIGHT, SET_WIND } from './actions'\nimport { getToken, getDateInfoList } from './selectors'\nimport { DateInfo, PibalDataInfo } from './states/IPibalDataList'\n\nfunction* authSaga() {\n  while (true) {\n    const action = yield take(START_CREATE_TOKEN)\n    \n    const username = action.payload.username\n    const password = action.payload.password\n\n    const { token, error } = yield call(authorize, username, password)\n\n    console.log(`action${START_CREATE_TOKEN}, user: ${username}, pass: ${password}, token: ${token}, error: ${error}`)\n\n    if (!token && error) {\n      yield put({ type: FINISH_CREATE_TOKEN })\n      localStorage.clear()\n      yield put({ type: REQUEST_LOGOUT })\n      continue; // 認証に失敗したらリトライに備えて最初に戻る\n    }\n\n    if (token) {\n      console.log(\"authsaga REQUEST_LOGIN\")\n      yield put({ type: REQUEST_LOGIN, payload: token })\n      yield put({ type: FINISH_CREATE_TOKEN });\n    }\n  }\n}\n\nfunction* pageSaga() {\n  while (true) {\n    // ログイン成功するまでずっと待つ\n    yield take(FINISH_CREATE_TOKEN)\n    // ページを移動する\n    yield put(push('/'))\n  }\n}\n\nfunction* fetchDatesSaga() {\n  const token = yield select(getToken)\n  const { dateList, error } = yield call(fetchDetes, token)\n\n  console.log(`action: ${START_FETCH_DATES}, dateList: ${dateList}, error: ${error}`)\n\n  if (!dateList && error) {\n    yield put({ type: FINISH_FETCH_DATES })\n    localStorage.clear()\n    yield put({ type: REQUEST_LOGOUT })\n    yield put(push('/'))\n  }\n\n  if (dateList) {\n    yield put({ type: SET_DATES, payload: dateList })\n    yield put({ type: FINISH_FETCH_DATES })\n    yield put({ type: SELECT_FLIGHT, payload: 0 })\n  }\n}\n\nfunction* selectFlightSaga() {\n  while(true) {\n    const action = yield take(SELECT_FLIGHT)\n    const id = action.payload\n    const token = yield select(getToken)\n    const dateInfoList = yield select(getDateInfoList)\n    const dateInfo: DateInfo = dateInfoList[id]\n\n    const { windInfoList, error } = yield call(fetchWindInfo, token, dateInfo.date, dateInfo.timePeriod)\n\n    if (!windInfoList && error) {\n      localStorage.clear()\n      yield put({ type: REQUEST_LOGOUT })\n      yield put(push('/'))\n    }\n\n    if (windInfoList) {\n      const pibalDataInfo: PibalDataInfo = {\n        id: id,\n        date: dateInfo.date,\n        timePeriod: dateInfo.timePeriod,\n        windInfoList: windInfoList\n      } \n      console.log(windInfoList)\n      yield put({type: SET_WIND, payload: pibalDataInfo })\n    }\n  }\n}\n\nexport default function* rootSaga() {\n  yield fork(authSaga);\n  yield fork(pageSaga);\n  yield takeEvery(START_FETCH_DATES, fetchDatesSaga)\n  yield fork(selectFlightSaga)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers, createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga';\nimport IState from './states/IState'\nimport { Reducer } from './reducer'\nimport rootSaga from './sagas'\nimport logger from 'redux-logger'\nimport history from './common/history'\n// import createHistory from 'history/createHashHistory';\nimport { routerMiddleware, connectRouter, RouterState } from 'connected-react-router'\n\nexport type AppState = {\n  state: IState\n  router: RouterState\n}\n\nexport default function configureStore(initialState?: AppState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    combineReducers<AppState>({\n      state: Reducer,\n      router: connectRouter(history)\n    }),\n    initialState,\n    applyMiddleware(\n      sagaMiddleware, logger, routerMiddleware(history)\n    )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};"],"sourceRoot":""}