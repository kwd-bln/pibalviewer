{"version":3,"sources":["containers/auth/img/fusen_fly_man.png","components/img sync /^/.//.*/.png$","components/img/hsl_from.png","components/img/hsl_to.png","actions/index.ts","containers/auth/Auth.tsx","containers/auth/Login.tsx","containers/UploadContainer.tsx","common/history.ts","components/SelectList.tsx","components/DstGlaph/Glaph.tsx","components/SpdGlaph/StrategyGlaph.tsx","components/DstGlaph/ToggleVisibleButtons.tsx","components/SpdGlaph/SelectTimeButton.tsx","components/SpdGlaph/SelectTimeButtons.tsx","components/SpdGlaph/StrategyTable.tsx","components/Table/NumberTable.tsx","components/ToggleIsToButton.tsx","components/Table/ToggleIsKtButton.tsx","components/TopPage.tsx","containers/TopPageContainer.tsx","App.tsx","serviceWorker.ts","reducer.ts","common/api.ts","selectors/index.ts","sagas.ts","index.tsx","store.ts"],"names":["module","exports","map","webpackContext","req","id","webpackContextResolve","__webpack_require__","o","e","Error","code","keys","Object","resolve","actionCreator","actionCreatorFactory","LoginAction","LogoutAction","StartCreateTokenAction","StartFetchDatesAction","FinishFetchDatesAction","SetDateInfoListAction","StartFetchPibalDataAction","EnlargeAction","ShirinkAction","ToggleVisibleAction","SelectFlightAction","SetCurrentWindInfoListAction","ToggleIsToAction","ToggleGlaphIsToAction","ToggleIsKtAction","SelectTimeAction","withRouter","connect","appState","token","state","dispatch","setLocalStorageToken","auth_token","props","localStorage","length","children","to","handleOnClickSubmitButton","username","password","useForm","register","handleSubmit","errors","reset","Fragment","src","require","className","alt","Form","noValidate","onSubmit","data","Group","as","Row","controlId","Label","column","sm","xs","Col","span","offset","Control","name","placeholder","type","inputMode","isInvalid","undefined","ref","required","Feedback","message","ButtonToolbar","Button","variant","history","createHashHistory","SelectList","options","dateInfoList","dateInfo","index","value","label","getYYYY_MM_DD","date","timePeriod","defaultValue","onChange","selectedOption","theme","borderRadius","colors","primary70","primary","Glaph","canvasRef","useRef","useEffect","pointsList","windInfoList","forEach","info","points","currentX","currentY","winds","wind","rad","deg","Math","PI","spd","sin","cos","push","x","y","hours","minutes","visible","maxR","aryMax","a","b","max","p","hypot","reduce","getRFrom","ctx","canvas","current","width","height","getContext","scaleDistance","ratio","oneThirdOfMaxR","ceil","Number","toPrecision","getScaleDistanceFrom","scaleRatio","scale","save","strokeStyle","fillStyle","beginPath","moveTo","arc","fill","canvasRightX","canvasBottomY","lineTo","padding","stroke","scaleLine","restore","font","textAlign","fillText","toString","scaleLineHeight","numOfPoints","hueStep","min","hue","hslStroke","hslFill","lineWidth","point","isTo","StrategyGlaph","windVectors","windInfo","scaleSpeed","round","getScaleSpeedFrom","originX","originY","numOfSplit","getHH_MM","slice","ToggleVisibleButtons","reverse","w","i","style","color","backgroundColor","margin","top","position","key","checked","onClick","onClickAt","readOnly","htmlFor","SelectTimeButton","buttonStyle","isSelected","text","SelectTimeButtons","items","selectedTimeIndex","StrategyTable","num","altCols","rows","hi","unshift","dispalyDeg","disPlaySpeed","NumberTable","maxHeightIndex","cols","ti","slappedSpd","isKt","alpha","ToggleIsToButton","border","svgStyle","xmlns","enableBackground","viewBox","d","ToggleIsKtButton","TopPage","this","handleOnLoadDates","tableHslImg","glaphIsTo","handleOnChangeValue","selected","selectedTimeWindInfo","Tabs","defaultActiveKey","Tab","eventKey","title","tabClassName","Container","fluid","ButtonGroup","vertical","size","handleClickEnlargeButton","handleClickShrinkButton","handleClickToggleIsToButton","handleOnSelectToggleButton","handleOnChangeTimeIndex","handleClickToggleGlaphIsToButton","handleClickToggleIsKtButton","React","Component","fetchingDates","fetchingPibalData","glpahIsTo","getFullYear","getMonth","getDate","App","path","component","Login","Upload","exact","TopPageContainer","Boolean","window","location","hostname","match","initialState","creatingToken","hasError","Reducer","reducerWithInitialState","case","pibalIndex","currentSelected","build","authorize","user","pass","body","JSON","stringify","postUser","postPass","fetch","method","mode","cache","credentials","headers","then","res","json","success","setItem","error","catch","fetchDetes","obj","dateList","apiDate","getDateFrom","timing","sort","getTime","fetchWindInfo","yyyymmdd","m","getYYYYMMDD","infos","degree","speed","year","month","day","Date","getToken","getDateInfoList","authSaga","pageSaga","fetchDatesSaga","selectFlightSaga","rootSaga","take","action","payload","call","put","clear","select","pibalDataInfo","fork","takeEvery","store","sagaMiddleware","createSagaMiddleware","middlewares","routerMiddleware","createStore","combineReducers","router","connectRouter","applyMiddleware","run","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.dc41bd4f.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/fusen_fly_man.9c7e6cbd.png\";","var map = {\n\t\"./hsl_from.png\": 92,\n\t\"./hsl_to.png\": 93\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = 91;","module.exports = __webpack_public_path__ + \"static/media/hsl_from.3c413c9b.png\";","module.exports = __webpack_public_path__ + \"static/media/hsl_to.55d8198e.png\";","import { actionCreatorFactory } from '../../node_modules/typescript-fsa';\nimport { ApiData } from '../reducer'\nimport { DateInfo, PibalDataInfo } from '../states/IPibalDataList'\n\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN'\nexport const START_CREATE_TOKEN = 'START_CREATE_TOKEN'\nexport const FINISH_CREATE_TOKEN = 'FINISH_CREATE_TOKEN'\nexport const START_FETCH_DATES = 'START_FETCH_DATES'\nexport const FINISH_FETCH_DATES = 'FINISH_FETCH_DATES'\nexport const SET_DATES = 'SET_DATES'\nexport const SELECT_FLIGHT = 'SELECT_FLIGHT'\nexport const SET_WIND = 'SET_WIND'\nexport const REQUEST_LOGOUT = 'REQUEST_LOGOUT'\n\nconst actionCreator = actionCreatorFactory()\n\nexport const LoginAction = actionCreator<string>(REQUEST_LOGIN)\n\nexport const LogoutAction = actionCreator(REQUEST_LOGOUT)\n\nexport const InputUserAction = actionCreator<string>('INPUT_USER')\n\nexport const InputPassAction = actionCreator<string>('INPUT_PASS')\n\nexport const StartCreateTokenAction = actionCreator<{username: string, password: string}>('START_CREATE_TOKEN')\n\nexport const FinishCreateTokenAction = actionCreator('FINISH_CREATE_TOKEN')\n\nexport const StartFetchDatesAction = actionCreator(START_FETCH_DATES)\n\nexport const FinishFetchDatesAction = actionCreator(FINISH_FETCH_DATES)\n\nexport const SetDateInfoListAction = actionCreator<DateInfo[]>(SET_DATES)\n\nexport const StartFetchPibalDataAction = actionCreator('START_FETCH_PIBALDATA')\n\nexport const EnlargeAction = actionCreator('ACTION_ENLARGE')\n\nexport const ShirinkAction = actionCreator('ACTION_SHRINK')\n\nexport const ToggleVisibleAction = actionCreator<number>('TOGGLE_VISIBLE')\n\nexport const SelectFlightAction = actionCreator<number>('SELECT_FLIGHT')\n\nexport const GetDataErrorAction = actionCreator<boolean>('GET_DATA_ERROR')\n\nexport const LoadDataAction = actionCreator<boolean>('LOAD_DATA_ERROR')\n\nexport const FetchedDataSuccessAction = actionCreator<ApiData>('FETCHED_DATA')\n\nexport const SetCurrentWindInfoListAction = actionCreator<PibalDataInfo>(SET_WIND)\n\nexport const ToggleIsToAction = actionCreator('TOGGLE_ISTO')\n\nexport const ToggleGlaphIsToAction = actionCreator('TOGGLE_GLAPHISTO')\n\nexport const ToggleIsKtAction = actionCreator('TOGGLE_ISKT')\n\nexport const SelectTimeAction = actionCreator<number>('SELECT_TIME')","import React from 'react'\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../store\"\nimport { withRouter } from 'react-router'\nimport { Dispatch } from 'redux'\nimport { LoginAction } from \"../../actions/index\";\n\nimport { Redirect, Route } from 'react-router-dom'\nimport * as H from 'history';\n\ninterface OwnProps {\n  history: H.History\n  token: string\n}\n\ninterface AuthHandler {\n  setLocalStorageToken(auth_token: string): void\n}\n\nconst Auth: React.FC<OwnProps&AuthHandler> = props => {\n  const auth_token = localStorage.auth_token\n    if (auth_token && !props.token) {\n      // localStorageにtokenがあって、stateにtokenがない場合、tokenをsetする\n      props.setLocalStorageToken(auth_token) \n    }\n    if (props.token.length || auth_token) {\n      return (\n        <Route children={props.children} />\n      )\n    } else {\n      return (\n        <Redirect to={'/login'} />\n      )\n    }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): AuthHandler => {\n  return {\n    setLocalStorageToken: (auth_token: string) => { dispatch(LoginAction(auth_token)) }\n  }\n}\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    token: appState.state.token,\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth))","import React from \"react\"\nimport { connect } from \"react-redux\";\nimport { useForm } from \"react-hook-form\"\nimport { Dispatch } from \"redux\"\nimport { AppState } from \"../../store\"\nimport { StartCreateTokenAction } from \"../../actions/index\";\nimport { Form, Row, Col, Button, ButtonToolbar} from 'react-bootstrap'\n\ntype FormData = {\n  username: string\n  password: string\n}\n\nexport interface LoginHandler {\n  handleOnClickSubmitButton(username: string, password: string): void\n}\n\nconst mapStateToProps = (state: AppState) => {\n  return {}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): LoginHandler => {\n  return {\n    handleOnClickSubmitButton: (username: string, password: string) => { dispatch(StartCreateTokenAction({ username, password })) }\n  }\n}\n\nconst Login: React.FC<LoginHandler> = (props) => {\n  const { register, handleSubmit, errors, reset } = useForm<FormData>()\n\n  const handleOnSubmit = (data: FormData) => {\n    props.handleOnClickSubmitButton(data.username, data.password)\n    reset()\n  }\n\n  return (\n    <React.Fragment>\n      <img src={require(\"./img/fusen_fly_man.png\")} className=\"login-image\" alt=\"pibal-man\"></img>\n    <Form noValidate onSubmit={handleSubmit(handleOnSubmit)}>\n      <Form.Group as={Row} controlId={'username'} className=\"login-form\">\n        <Form.Label column sm={3} xs={12}>{'ユーザー名'}</Form.Label>\n        <Col xs={{ span: 10, offset: 1 }} sm={7}>\n          <Form.Control\n            name={'username'}\n            placeholder={'username'}\n            type={'text'}\n            inputMode={'url'}\n            isInvalid={errors.username !== undefined}\n            ref={register({\n              required: \"入力が必要です！\"\n            })}\n          />\n          {\n            errors.username &&\n            <Form.Control.Feedback type=\"invalid\">\n              {errors.username.message}\n            </Form.Control.Feedback>\n          }\n        </Col>\n      </Form.Group>\n      <Form.Group as={Row} controlId={'password'} className=\"login-form\">\n        <Form.Label column sm={3} xs={12}>{'パスワード'}</Form.Label>\n        <Col xs={{ span: 10, offset: 1 }} sm={7}>\n          <Form.Control\n            name={'password'}\n            placeholder={'password'}\n            type={'password'}\n            isInvalid={errors.password !== undefined}\n            ref={register({\n              required: \"入力が必要です！\"\n            })}\n          />\n        </Col>\n        {\n          errors.password &&\n          <Form.Control.Feedback type=\"invalid\">\n            {errors.password.message}\n          </Form.Control.Feedback>\n        }\n      </Form.Group>\n      <Form.Group>\n        <Col sm={5} >\n          <ButtonToolbar>\n            <Button variant={'primary'} type=\"submit\" className=\"login-button\">ログイン</Button>\n          </ButtonToolbar>\n        </Col>\n      </Form.Group>\n    </Form>\n    </React.Fragment>\n  );\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(Login)","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { AppState } from \"../store\"\nimport React from \"react\"\n\nexport interface UploadHandler {\n}\n\nconst mapStateToProps = (appState: AppState) => {\n\treturn {\n\t\ttoken: appState.state.token\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): UploadHandler => {\n\treturn {\n\t}\n}\n\nconst UploadPage: React.FC<UploadHandler> = (props) => {\n  return (\n    <div>aaaaaaaaaaaaaaaaa</div>\n  )\n}\n\n\nexport default connect(mapStateToProps, mapDispatchToProps)(UploadPage)","import { createHashHistory } from 'history';\n\nconst history = createHashHistory();\nexport default history;","import React from 'react'\nimport Select from 'react-select'\nimport { ValueType } from \"react-select\";\nimport { DateInfo } from './../states/IPibalDataList'\nimport { getYYYY_MM_DD } from './../containers/TopPageContainer'\n\ntype OptionType = { label: string; value: number };\n\ntype Props = {\n  dateInfoList: DateInfo[]\n  onChange: (value: number) => void\n}\n\nconst SelectList: React.FC<Props> = (props) => {\n  const options: OptionType[] = props.dateInfoList.map((dateInfo, index) => {\n    return {\n      value: index,\n      label: `${getYYYY_MM_DD(dateInfo.date)} - ${dateInfo.timePeriod}`\n    }\n  })\n  if (!options.length) return <p>nodata</p>\n  \n  return (\n    <div className=\"select-dates-div\">\n      <Select options={options} defaultValue={options[0]} className='dates-select' onChange={(selectedOption: ValueType<OptionType>) => {\n        const value = (selectedOption as OptionType).value\n        props.onChange(value)\n      }} theme={theme => ({\n        ...theme,\n        borderRadius: 4,\n        colors: {\n          ...theme.colors,\n          primary70: 'skyblue',\n          primary: 'skyblue',\n        },\n      })}/>\n    </div>\n  )\n}\n\nexport default SelectList","import React, { useEffect, useRef } from \"react\";\n\nimport { WindInfo } from \"../../states/IPibalDataList\"\n\ntype Point = {\n  x: number,\n  y: number\n}\n\ntype PointsInfo = {\n  hours: number,\n  minutes: number,\n  visible: boolean,\n  points: Point[]\n}\n\ninterface Props {\n  windInfoList: WindInfo[],\n  scaleRatio: number,\n  isTo: boolean\n}\n\nconst Glaph: React.FC<Props> = (props) => {\n  const canvasRef = useRef(null);\n\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    canvas.width = 480;\n    canvas.height = 480;\n\n    return canvas.getContext('2d');\n  };\n\n  const getCanvasWidth = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.width\n  }\n\n  const getCanvasHeight = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.height\n  }\n\n  useEffect(() => {  \n    // どこの点をとるかの計算\n    let pointsList: PointsInfo[] = []\n\n    // 時間ごとにpointsに直していく\n    const ktToMPer60s = 30.8667 // x (kt) => ktToMPer60s * x (m/100s) で変換\n    props.windInfoList.forEach( info => {\n      let points: Point[] = []\n      let currentX = 0\n      let currentY = 0\n\n      info.winds.forEach( wind => {\n        const rad: number = wind.deg * (Math.PI / 180);\n        currentX += wind.spd * ktToMPer60s * Math.sin(rad)\n        currentY += wind.spd * ktToMPer60s * Math.cos(rad)\n        points.push({\n          x: currentX,\n          y: currentY\n        })\n      })\n\n      pointsList.push({\n        hours: info.hours,\n        minutes: info.minutes,\n        visible: info.visible,\n        points: points\n      })\n    })\n\n    // 最も遠い点の距離の計算\n    const maxR = getRFrom(pointsList)\n\n    /*  */\n    const ctx: CanvasRenderingContext2D = getContext();\n    const originX: number = 240\n    const originY: number = 240\n\n    // scaleDistance * 3 = 144 になるように\n    const scaleDistance = getScaleDistanceFrom(maxR, props.scaleRatio)\n\n    const scaleLine = 48\n    const scale = scaleLine / scaleDistance\n\n    // 原点の描画\n    ctx.save();\n    ctx.strokeStyle = \"#707070\";\n    ctx.fillStyle = \"#707070\";\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 軸線の描画\n    const padding = 50\n    const canvasRightX = getCanvasWidth() - padding\n    const canvasBottomY = getCanvasHeight() - padding\n    ctx.beginPath();\n    ctx.moveTo(padding, originY);\n    ctx.lineTo(canvasRightX, originY);\n    ctx.moveTo(originX, padding);\n    ctx.lineTo(originX, canvasBottomY);\n\n    // 斜め線 30度ごと\n    const canvasHarfWidth = (originX - padding) / 2\n    ctx.moveTo(padding + canvasHarfWidth, padding);\n    ctx.lineTo(padding + canvasHarfWidth * 3, canvasBottomY);\n    ctx.moveTo(padding + canvasHarfWidth * 3, padding);\n    ctx.lineTo(padding + canvasHarfWidth, canvasBottomY);\n    ctx.moveTo(padding, padding + canvasHarfWidth);\n    ctx.lineTo(canvasRightX, padding + canvasHarfWidth * 3);\n    ctx.moveTo(padding, padding + canvasHarfWidth * 3);\n    ctx.lineTo(canvasRightX, padding + canvasHarfWidth);\n    ctx.stroke()\n\n    // scale円の描画\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, scaleLine, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 2, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 3, 0, Math.PI * 2)\n    ctx.stroke()\n\n    // scaleの描画\n    ctx.beginPath()\n    const scaleLineHeight = 10\n    ctx.moveTo(canvasRightX * 0.3, canvasBottomY)\n    ctx.lineTo(canvasRightX * 0.3, canvasBottomY + scaleLineHeight)\n    ctx.lineTo(canvasRightX * 0.3 + scaleLine, canvasBottomY + scaleLineHeight)\n    ctx.lineTo(canvasRightX * 0.3 + scaleLine, canvasBottomY)\n    ctx.stroke()\n    ctx.restore();\n\n    // scaleのテキストの描画\n    ctx.save();\n    ctx.fillStyle = \"black\"\n    ctx.font = \"14px Arial\"\n    ctx.textAlign = \"center\"\n    ctx.fillText(scaleDistance.toString() + 'm',\n      canvasRightX * 0.3 + scaleLine * 0.5,\n      canvasBottomY + scaleLineHeight * 2.5)\n    ctx.restore()\n\n    //　各点のプロット\n    let numOfPoints = pointsList.length\n    const hueStep = Math.min(360 / numOfPoints, 40)\n    pointsList.forEach((data, index) => {\n      if (data.visible) {\n        const points = data.points\n        // 色の決定\n        const hue = Math.ceil(hueStep * (numOfPoints - index - 1))\n        const hslStroke = \"hsl(\" + hue + \", 100%, 50%)\";\n        const hslFill = \"hsl(\" + hue + \", 80%, 45%)\";\n\n        // 一つの時間のpibaldataを描画\n        let x = originX\n        let y = originY\n        ctx.lineWidth = 2\n        points.forEach(point => {\n          ctx.save();\n          ctx.strokeStyle = hslStroke;\n          ctx.fillStyle = hslFill;\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          x = originX + (props.isTo ? (-point.x * scale) : point.x * scale)\n          y = originY - (props.isTo ? (-point.y * scale) : point.y * scale)\n          ctx.lineTo(x, y);\n          ctx.stroke();\n          ctx.moveTo(x, y);\n          ctx.arc(x, y, 4, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        })\n      }\n    })\n\n    // scaleのプロット\n  })\n\n  return (\n    <div className=\"rect-wrap\">\n      <canvas className=\"pibal-glaph\" ref={canvasRef} />\n    </div>\n  )\n\n}\n\n\n// pointsの集合であるpointsListから最大半径を求めるための関数\nfunction getRFrom(pointsList: PointsInfo[]): number {\n  const aryMax = function(a: number, b:number): number {return Math.max(a, b)}\n  return pointsList\n  .map(data => data.points.map(p => Math.hypot(p.x, p.y)).reduce(aryMax))\n  .reduce(aryMax, 1)\n}\n\n// scale円の単位距離を導出\nfunction getScaleDistanceFrom(maxR: number, ratio: number): number {\n  const oneThirdOfMaxR: number = Math.ceil(maxR / 3.2 / ratio)\n  \n  // 3 * scale = maxDist / 1.1 になるようにする\n  const ScaleDistance = Math.max(Number(oneThirdOfMaxR.toPrecision(2)), 10)\n  return ScaleDistance\n}\n\nexport default Glaph","import React, { useEffect, useRef } from \"react\";\n\nimport { WindInfo } from \"../../states/IPibalDataList\"\ntype Point = {\n  x: number,\n  y: number\n}\n\ninterface Props {\n  windInfo: WindInfo,\n}\n\nconst StrategyGlaph: React.FC<Props> = (props) => {\n  const canvasRef = useRef(null);\n\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    canvas.width = 480;\n    canvas.height = 480;\n\n    return canvas.getContext('2d');\n  };\n\n  const getCanvasWidth = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.width\n  }\n\n  const getCanvasHeight = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.height\n  }\n\n  useEffect(() => {\n    const ktToKmPerH = 1.852\n    const windVectors: Point[] = props.windInfo.winds.map( wind => {\n      const rad: number = wind.deg * (Math.PI / 180);\n      return {\n        x: wind.spd * ktToKmPerH * Math.sin(rad),\n        y: wind.spd * ktToKmPerH * Math.cos(rad)\n      }\n    })\n\n    // 最も遠い点の距離の計算\n    const maxR = getRFrom(windVectors)\n\n    /*  */\n    const ctx: CanvasRenderingContext2D = getContext();\n    const originX: number = 240\n    const originY: number = 240\n\n    // scaleSpeed * 5 = maxR になるように\n    const scaleSpeed = getScaleSpeedFrom(maxR)\n    const scaleLine = 36\n    const scale = scaleLine / scaleSpeed\n\n    // 原点の描画\n    ctx.save();\n    ctx.strokeStyle = \"#707070\";\n    ctx.fillStyle = \"#707070\";\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 軸線の描画\n    const padding = 50\n    const canvasRightX = getCanvasWidth() - padding\n    const canvasBottomY = getCanvasHeight() - padding\n    ctx.beginPath();\n    ctx.moveTo(padding, originY);\n    ctx.lineTo(canvasRightX, originY);\n    ctx.moveTo(originX, padding);\n    ctx.lineTo(originX, canvasBottomY);\n\n    // 斜め線 30度ごと\n    const canvasHarfWidth = (originX - padding) / 2\n    ctx.moveTo(padding + canvasHarfWidth, padding);\n    ctx.lineTo(padding + canvasHarfWidth * 3, canvasBottomY);\n    ctx.moveTo(padding + canvasHarfWidth * 3, padding);\n    ctx.lineTo(padding + canvasHarfWidth, canvasBottomY);\n    ctx.moveTo(padding, padding + canvasHarfWidth);\n    ctx.lineTo(canvasRightX, padding + canvasHarfWidth * 3);\n    ctx.moveTo(padding, padding + canvasHarfWidth * 3);\n    ctx.lineTo(canvasRightX, padding + canvasHarfWidth);\n    ctx.stroke()\n\n    // scale円の描画\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, scaleLine, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 2, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 3, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 4, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 5, 0, Math.PI * 2)\n    ctx.stroke()\n\n    // メモリの描画\n    const offsetX = 7\n    ctx.save();\n    ctx.fillStyle = \"black\"\n    ctx.font = \"14px Arial\"\n    ctx.textAlign = \"center\"\n    ctx.fillText(scaleSpeed.toString(),\n      originX + scaleLine + offsetX,\n      originY)\n    ctx.fillText((scaleSpeed * 2).toString(),\n      originX + (scaleLine * 2) + offsetX,\n      originY)\n    ctx.fillText((scaleSpeed * 3).toString(),\n      originX + (scaleLine * 3) + offsetX,\n      originY)\n    ctx.fillText((scaleSpeed * 4).toString(),\n      originX + (scaleLine * 4) + offsetX,\n      originY)\n    ctx.fillText((scaleSpeed * 5).toString(),\n      originX + (scaleLine * 5) + offsetX,\n      originY)\n    ctx.fillText('(km/h)',\n      originX + (scaleLine * 5) + 15,\n      originY + 12)\n    ctx.restore()\n\n    //　各点のプロット\n    let numOfSplit = windVectors.length \n    const hueStep = Math.min(300 / numOfSplit)\n    windVectors.forEach((point, index) => {\n      // 色の決定\n      const hue = (Math.ceil(260 - hueStep * index)) % 360\n      const hslStroke = \"hsl(\" + hue + \", 100%, 50%)\";\n      const hslFill = \"hsl(\" + hue + \", 80%, 45%)\";\n\n      ctx.save();\n      ctx.strokeStyle = hslStroke;\n      ctx.fillStyle = hslFill;\n      ctx.lineWidth = 2;\n      ctx.beginPath();\n      ctx.moveTo(originX, originY);\n      const x = originX - point.x * scale\n      const y = originY + point.y * scale\n      ctx.lineTo(x, y);\n      ctx.stroke();\n      ctx.restore();\n    })\n\n  })\n\n  return (\n    <div className=\"rect-wrap\">\n      <canvas className=\"pibal-glaph\" ref={canvasRef} />\n    </div>\n  )\n}\n\n// pointsの集合であるpointsListから最大半径を求めるための関数\nfunction getRFrom(points: Point[]): number {\n  return Math.max(...points.map(p => Math.hypot(p.x, p.y)))\n}\n\n// scale円の単位距離を導出\nfunction getScaleSpeedFrom(maxR: number): number {\n  const oneFifthOfMaxR: number = Math.max(Math.round(maxR / 4.8), 1)\n  \n  return oneFifthOfMaxR\n}\n\nexport default StrategyGlaph ","import React from 'react';\nimport { WindInfo } from \"../../states/IPibalDataList\";\nimport { Row, Col } from 'react-bootstrap'\n\ninterface Props {\n  windInfoList: WindInfo[]\n  onClickAt: (index: number) => void\n}\n\nconst ToggleVisibleButtons: React.FC<Props> = (props) => {\n   const numOfPoints = props.windInfoList.length\n   const hueStep = Math.min(360 / numOfPoints, 40)\n  return (\n    <Col xs={{ offset: 2, span: 10 }} sm={{ offset: 0, span: 4 }}>\n      <div className=\"button-wrap\">\n      {props.windInfoList.slice().reverse().map((w, i) => {\n          const hue = Math.ceil(hueStep * i)\n          const hslFill = \"hsla(\" + hue + \", 80%, 45%, 0.8)\";\n          const style: React.CSSProperties = {\n            color: 'white',\n            backgroundColor: hslFill,\n            textAlign: 'center',\n            borderRadius: \"3px\",\n            margin: \"0\",\n            top: \"5%\",\n            position: \"absolute\",\n            width: \"80px\",\n          }\n          return (\n            <Row key={`toggle-${i}`}>\n              <Col xs={{ offset: 1, span: 4 }} sm={{ offset: 0, span: 5 }}>\n                <div className=\"form-group\">\n                  <span className=\"switch\">\n                    <input type=\"checkbox\" className=\"switch\" id={`wind-${i}`} checked={props.windInfoList[numOfPoints - i - 1].visible} onClick={(e) => { props.onClickAt(numOfPoints - i - 1) }} readOnly />\n                    <label htmlFor={`wind-${i}`}></label>\n                  </span>\n                </div>\n              </Col>\n              <Col xs={{ offset: 1, span: 6 }} sm={{ offset: 0, span: 7 }}>\n                <p style={style}>{getHH_MM(w.hours, w.minutes)}</p>\n              </Col>\n            </Row>\n          )\n        })}\n      </div>\n    </Col>\n  )\n}\n\nexport function getHH_MM(hours: number, minutes: number):string {\n\tconst hh = (\"00\" + hours).slice(-2)\n\tconst mm = (\"00\" + minutes).slice(-2)\n  const result = hh + \":\" + mm\n  return result\n}\n\nexport default ToggleVisibleButtons","import React from 'react'\n\ninterface OwnProps {\n  text: string\n  isSelected: boolean,\n  hue: number,\n  onClick: () => void\n}\n\nconst SelectTimeButton: React.FC<OwnProps> = props => {\nconst buttonStyle: React.CSSProperties = {\nbackgroundColor: props.isSelected ? `hsl(${props.hue}, 80%, 50%)` : `hsla(${props.hue}, 80%, 50%, 0.3)`\n}\n\nreturn <button type={'button'} onClick={props.onClick} className={\"toggle-glaph-button\"} style={buttonStyle}>{props.text}</button>\n}\n\nexport default SelectTimeButton","import React from 'react'\nimport { WindInfo } from \"../../states/IPibalDataList\"\nimport { getHH_MM } from '../DstGlaph/ToggleVisibleButtons'\nimport SelectTimeButton from './SelectTimeButton'\n\ninterface OwnProps {\n  windInfoList: WindInfo[]\n  onClick: (value: number) => void\n  selectedTimeIndex: number\n}\n\nconst SelectTimeButtons: React.FC<OwnProps> = props => {\n  const numOfPoints = props.windInfoList.length\n  const hueStep = Math.min(360 / numOfPoints, 40)\n\n  const items = props.windInfoList.map((info, i) => {\n    const hue = Math.ceil(hueStep * (numOfPoints - i - 1))\n    const text = getHH_MM(info.hours, info.minutes)\n    return <SelectTimeButton text={text} onClick={() => { props.onClick(i)}} hue={hue} isSelected={i === props.selectedTimeIndex} key={`select-time-${i}`}/>\n  })\n  return (\n    <React.Fragment>\n      {items}\n    </React.Fragment>\n  )\n}\n\nexport default SelectTimeButtons\n","import React from \"react\";\nimport { WindInfo } from \"../../states/IPibalDataList\"\nimport { getHH_MM } from '../DstGlaph/ToggleVisibleButtons'\n\ninterface Props {\n  num: number\n  windInfo: WindInfo\n}\n\nconst StrategyTable: React.FC<Props> = (props) => {\n  const hueStep = Math.min(300 / props.num)\n  const altCols = []\n  const rows = []\n  const winds = props.windInfo.winds\n  for (let hi = 0; hi < props.num; hi++) {\n    const hue = (Math.ceil(260 - hueStep * hi)) % 360\n    const style: React.CSSProperties = {\n      backgroundColor: `hsl(${hue},80%,50%)`,\n      color: \"white\"\n    }\n    altCols.unshift(<div id='cell' className=\"altitude-st-cell\" key={`cell-stg-alt-row-${hi}`} style={style}>{`${(hi + 1) * 100}`}</div>)\n\n    const deg = winds[hi].deg\n    const dispalyDeg = (deg + 180) % 360\n    const spd = winds[hi].spd\n    const disPlaySpeed = Math.round(spd * 1.852)\n\n    rows.unshift(<div id='cell' className=\"cell-small\" key={`cell-${hi}-st`} ><div className=\"small-left\">{dispalyDeg}</div><div className=\"small-right\">{disPlaySpeed}</div></div>)\n  }\n  rows.unshift(<div id='cell' className=\"cell-small\" key={`cell-st-top`} ><div className=\"small-left\">Ang</div><div className=\"small-right\">km/h</div></div>)\n  \n  altCols.unshift(<div id='cell' className=\"altitude-st-cell\" key=\"cell-stg-alt-row\" >Alt</div>)\n\n  return (\n    <React.Fragment>\n      <div className='st-table'>{altCols}</div>\n      <div className='st-table'>{rows}</div>\n    </React.Fragment>\n    )\n}\n\nexport default StrategyTable","\nimport React from \"react\";\nimport { WindInfo } from \"../../states/IPibalDataList\"\nimport { getHH_MM } from '../DstGlaph/ToggleVisibleButtons'\n\ninterface Props {\n  windInfoList: WindInfo[]\n  isTo: boolean\n  isKt: boolean\n}\n\nconst NumberTable: React.FC<Props> = (props) => {\n  // 配置する位置を計算するための準備\n  const maxHeightIndex = Math.max(...props.windInfoList.map(info => info.winds.length))\n  const numOfPoints = props.windInfoList.length\n  const hueStep = Math.min(360 / numOfPoints, 40)\n\n  const maxAlpha = 0.9\n  const minAlpha = 0.05\n  const maxSpeed = 15\n\n\n  // 左の見出し欄\n  const altCols = []\n  for (let hi = 0; hi < maxHeightIndex; hi++) {\n    altCols.unshift(<div id='cell' className=\"altitude-cell\" key={`cell-alt-row-${hi}`} >{`${(hi + 1) * 100}`}</div>)\n  }\n  altCols.unshift(<div id='cell' className=\"altitude-cell\" key=\"cell-alt-row\" >Alt(m)</div>)\n\n  const cols = []\n  for (let ti = 0; ti < numOfPoints; ti++) {\n    const windInfo = props.windInfoList[ti]\n    const winds = windInfo.winds\n\n    const rows = []\n    for (let hi = 0; hi < maxHeightIndex; hi++) {\n      if ( hi < winds.length) {\n        const deg = winds[hi].deg\n        const dispalyDeg = (deg + (props.isTo ? 180 : 0)) % 360\n        const spd = winds[hi].spd\n        const slappedSpd = Math.min(maxSpeed, spd)\n        const disPlaySpeed = props.isKt ? spd : Math.round(spd * 1.852)\n        const alpha = (minAlpha * (maxSpeed - slappedSpd) + maxAlpha * slappedSpd) / maxSpeed\n        const style: React.CSSProperties = {\n          backgroundColor: `hsla(${deg},80%,50%, ${alpha})`\n        }\n\n        rows.unshift(<div id='cell' style={style} key={`cell-${hi}-${ti}`} ><div className=\"small-left\">{dispalyDeg}</div><div className=\"small-right\">{disPlaySpeed}</div></div>)\n      } else {\n        rows.unshift(<div id='cell' key={`cell-${hi}-${ti}`} >x</div>)\n      }\n    }\n    const hue = Math.ceil(hueStep * (numOfPoints - ti -1))\n    const hslFill = \"hsla(\" + hue + \", 80%, 50%, 0.8)\";\n    const style: React.CSSProperties = {\n      color: 'white',\n      backgroundColor: hslFill\n    }\n    rows.unshift(<div id='cell' style={style} key={`cell-time-${ti}`}>{getHH_MM(windInfo.hours, windInfo.minutes)}</div>)\n    cols.push(<div className='num-table-col' key={`col-${ti}`}>{rows}</div>)\n  }\n\n  // hh:mmの列（最上列の代入）\n\n  return (\n    <div id=\"display-flex\" className=\"margin-top-10px\">\n      <div className=\"altidute-col\" key='alt-col'>\n        {altCols}\n      </div>\n      <div id=\"holizontal-scroll\" key='data-cols'>\n        {cols}\n      </div>\n    </div>\n  )\n}\n\nexport default NumberTable\n\n","import React from 'react';\n\ninterface OwnProps {\n    isTo: boolean\n    className?: string\n    onClick: () => void\n}\n\nconst ToggleIsToButton: React.FC<OwnProps> = props => {\nconst buttonStyle: React.CSSProperties = {\n  color: props.isTo ? \"#67c5ff\" : \"#ff6e7a\",\n  border: props.isTo ? \"solid 2px #67c5ff\" : \"solid 2px #ff6e7a\"\n}\n\nconst svgStyle: React.CSSProperties = {\n  fill: props.isTo ? \"#67c5ff\" : \"#ff6e7a\",\n}\nreturn <button type={'button'} onClick={props.onClick} className={props.className || \"toggle-to-from\"} style={buttonStyle}>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" className=\"svg-tofrom\" style={svgStyle}><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g/><g><path d=\"M22,8l-4-4v3H3v2h15v3L22,8z\"/><path d=\"M2,16l4,4v-3h15v-2H6v-3L2,16z\"/></g></g></svg>\n  {props.isTo ? '　To' : ' From'}\n  </button>\n}\n\nexport default ToggleIsToButton","import React from 'react';\n\ninterface OwnProps {\n    isKt: boolean\n    onClick: () => void\n}\n\nconst ToggleIsKtButton: React.FC<OwnProps> = props => {\nconst buttonStyle: React.CSSProperties = {\n  color: props.isKt ? \"#67c5ff\" : \"#ff6e7a\",\n  border: props.isKt ? \"solid 2px #67c5ff\" : \"solid 2px #ff6e7a\"\n}\n\nconst svgStyle: React.CSSProperties = {\n  fill: props.isKt ? \"#67c5ff\" : \"#ff6e7a\",\n}\nreturn <button type={'button'} onClick={props.onClick} className={\"toggle-table\"} style={buttonStyle}>\n  <svg xmlns=\"http://www.w3.org/2000/svg\" enableBackground=\"new 0 0 24 24\" height=\"24\" viewBox=\"0 0 24 24\" width=\"24\" className=\"svg-tofrom\" style={svgStyle}><g><rect fill=\"none\" height=\"24\" width=\"24\"/></g><g><g/><g><path d=\"M22,8l-4-4v3H3v2h15v3L22,8z\"/><path d=\"M2,16l4,4v-3h15v-2H6v-3L2,16z\"/></g></g></svg>\n  {props.isKt ? '　kt' : ' km/h'}\n  </button>\n}\n\nexport default ToggleIsKtButton","import React from 'react'\nimport { TopPageHandler } from '../containers/TopPageContainer';\nimport SelectList from './SelectList'\nimport Glaph from './DstGlaph/Glaph'\nimport StrategyGlaph from './SpdGlaph/StrategyGlaph'\nimport SelectTimeButtons from './SpdGlaph/SelectTimeButtons'\nimport StrategyTable from './SpdGlaph/StrategyTable'\nimport { PibalDataInfo, DateInfo } from '../states/IPibalDataList'\nimport NumberTable from './Table/NumberTable'\nimport { Tab, Tabs, Col, Button, Row, Container, ButtonGroup } from 'react-bootstrap'\nimport ToggleVisibleButtons from './DstGlaph/ToggleVisibleButtons'\nimport ToggleIsToButton from './ToggleIsToButton'\nimport ToggleIsKtButton from './Table/ToggleIsKtButton'\n\ninterface OwnProps {\n\ttoken: string\n\tfetchingDates: boolean\n\tfetchingPibalData: boolean\n  scale: number\n  selected?: PibalDataInfo\n\tdateInfoList: DateInfo[]\n\tisTo: boolean\n\tglaphIsTo: boolean\n\tisKt: boolean\n\tselectedTimeIndex: number\n}\ntype Props = OwnProps & TopPageHandler\nexport class TopPage extends React.Component<Props> {\n\tcomponentDidMount() {\n\t\tif (this.props.token) {\n\t\t\tif (this.props.dateInfoList.length === 0) {\n\t\t\t\t// dateInfoListがからのとき、APIを叩く\n\t\t\t\tthis.props.handleOnLoadDates()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\tconst tableHslImg = this.props.glaphIsTo ? 'hsl_to' : 'hsl_from'\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<SelectList dateInfoList={this.props.dateInfoList} onChange={this.props.handleOnChangeValue}/>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.props.selected) {\n\t\t\t\t\t\tconst selectedTimeWindInfo = this.props.selected.windInfoList[this.props.selectedTimeIndex]\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<Tabs defaultActiveKey=\"glaph\" id=\"uncontrolled-tab-example\" className=\"nav-justified\">\n\t\t\t\t\t\t\t\t<Tab eventKey=\"glaph\" title=\"Dst Glaph\" tabClassName=\"my-tab\">\n\t\t\t\t\t\t\t\t\t<Container className=\"px-0\" fluid>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={12} sm={8} className=\"px-0\">\n\t\t\t\t\t\t\t\t\t\t\t\t<Glaph windInfoList={this.props.selected.windInfoList} scaleRatio={this.props.scale} isTo={this.props.isTo}/>\n\t\t\t\t\t\t\t\t\t\t\t\t<ButtonGroup vertical className=\"myButtonClass\">\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"info\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle pull-right center-block my-button\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleClickEnlargeButton}>＋</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t\t<Button variant=\"info\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tclassName=\"rounded-circle pull-right center-block my-button \"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tsize=\"sm\"\n\t\t\t\t\t\t\t\t\t\t\t\t\t\tonClick={this.props.handleClickShrinkButton}>−</Button>\n\t\t\t\t\t\t\t\t\t\t\t\t</ButtonGroup>\n\t\t\t\t\t\t\t\t\t\t\t\t<ToggleIsToButton isTo={this.props.isTo} onClick={this.props.handleClickToggleIsToButton}/> \n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t\t<ToggleVisibleButtons windInfoList={this.props.selected.windInfoList} onClickAt={this.props.handleOnSelectToggleButton} />\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t\t<Tab eventKey=\"st-table\" title=\"Spd Glaph\" tabClassName=\"my-tab\">\n\t\t\t\t\t\t\t\t\t<Container className=\"px-0\" fluid>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={12}>\n\t\t\t\t\t\t\t\t\t\t\t\t<SelectTimeButtons windInfoList={this.props.selected.windInfoList} selectedTimeIndex={this.props.selectedTimeIndex} onClick={this.props.handleOnChangeTimeIndex}/>\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t\t<Row>\n\t\t\t\t\t\t\t\t\t\t\t<Col xs={12} sm={8} className=\"px-0\" id=\"display-flex\">\n\t\t\t\t\t\t\t\t\t\t\t\t<StrategyTable num={selectedTimeWindInfo.winds.length} windInfo={selectedTimeWindInfo}/>\n\t\t\t\t\t\t\t\t\t\t\t\t<StrategyGlaph windInfo={selectedTimeWindInfo} />\n\t\t\t\t\t\t\t\t\t\t\t</Col>\n\t\t\t\t\t\t\t\t\t\t</Row>\n\t\t\t\t\t\t\t\t\t</Container>\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t\t<Tab eventKey=\"table\" title=\"Table\" tabClassName=\"my-tab\">\n\t\t\t\t\t\t\t\t\t<div className=\"table-button-container\">\n\t\t\t\t\t\t\t\t\t\t<ToggleIsToButton isTo={this.props.glaphIsTo} onClick={this.props.handleClickToggleGlaphIsToButton} className='toggle-table' />\n\t\t\t\t\t\t\t\t\t\t<ToggleIsKtButton isKt={this.props.isKt} onClick={this.props.handleClickToggleIsKtButton}/> \n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<NumberTable windInfoList={this.props.selected.windInfoList} isTo={this.props.glaphIsTo} isKt={this.props.isKt}/>\n\t\t\t\t\t\t\t\t\t<div id=\"centering\">\n\t\t\t\t\t\t\t\t\t\t<img src={require(`./img/${tableHslImg}.png`)} className=\"hsl-image\" alt=\"hsl-circle\"/>\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</Tab>\n\t\t\t\t\t\t\t</Tabs>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})()}\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction, ToggleIsToAction, ToggleGlaphIsToAction, ToggleIsKtAction, SelectTimeAction } from \"../actions/index\";\nimport { StartFetchDatesAction } from \"../actions/index\";\nimport { TopPage } from \"../components/TopPage\";\nimport { AppState } from \"../store\"\n\nexport interface TopPageHandler {\n\thandleClickEnlargeButton(): void\n\thandleClickShrinkButton(): void\n\thandleOnChangeValue(value: number): void\n\thandleOnSelectToggleButton(value: number): void\n\thandleOnLoadDates(): void\n\thandleClickToggleIsToButton(): void\n\thandleClickToggleGlaphIsToButton(): void\n\thandleClickToggleIsKtButton(): void\n\thandleOnChangeTimeIndex(value: number): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n\treturn {\n\t\ttoken: appState.state.token,\n\t\tfetchingDates: appState.state.fetchingDates,\n\t\tfetchingPibalData: appState.state.fetchingPibalData,\n\t\tscale: appState.state.scale,\n\t\tselected: appState.state.selected,\n\t\tdateInfoList: appState.state.dateInfoList,\n\t\tisTo: appState.state.isTo,\n\t\tglaphIsTo: appState.state.glpahIsTo,\n\t\tisKt: appState.state.isKt,\n\t\tselectedTimeIndex: appState.state.selectedTimeIndex\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): TopPageHandler => {\n\treturn {\n\t\thandleClickEnlargeButton: () => { dispatch(EnlargeAction()) },\n\t\thandleClickShrinkButton: () => { dispatch(ShirinkAction()) },\n\t\thandleOnChangeValue: (value: number) => { dispatch(SelectFlightAction(value)) },\n\t\thandleOnSelectToggleButton: (value: number) => { dispatch(ToggleVisibleAction(value)) },\n\t\thandleOnLoadDates: () => { dispatch(StartFetchDatesAction()) },\n\t\thandleClickToggleIsToButton: () => { dispatch(ToggleIsToAction())},\n\t\thandleClickToggleGlaphIsToButton: () => { dispatch(ToggleGlaphIsToAction())},\n\t\thandleClickToggleIsKtButton: () => { dispatch(ToggleIsKtAction())},\n\t\thandleOnChangeTimeIndex: (value: number) => { dispatch(SelectTimeAction(value)) }\n\t}\n}\n\nexport default connect(mapStateToProps, mapDispatchToProps)(TopPage)\n\nexport function getYYYY_MM_DD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + \"/\" + m + \"/\" + d\n  return result\n}","import React from 'react';\nimport { Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\nimport Auth from './containers/auth/Auth';\nimport Login from './containers/auth/Login';\nimport Upload from './containers/UploadContainer'\nimport history from './common/history';\nimport './css/bootstrap.min.css';\nimport './App.scss';\n\nimport TopPageContainer from './containers/TopPageContainer';\n\nconst App: React.FC = () => {\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Route path=\"/upload\" component={Upload} />\n        <Auth>\n          <Route exact path=\"/\" component={TopPageContainer} />\n        </Auth>\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { reducerWithInitialState } from '../node_modules/typescript-fsa-reducers';\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SetCurrentWindInfoListAction } from './actions/index';\nimport { LoginAction, StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, LogoutAction, ToggleIsToAction, ToggleGlaphIsToAction, ToggleIsKtAction, SelectTimeAction } from './actions/index'\nimport { SetDateInfoListAction } from './actions/index';\nimport IState from './states/IState'\n\nexport const initialState: IState = {\n\ttoken: \"\",\n\tcreatingToken: false,\n\tfetchingDates: false,\n\tfetchingPibalData: false,\n\thasError: false,\n\tscale: 1,\n\tselected: undefined,\n\tdateInfoList: [],\n\tisTo: true,\n\tglpahIsTo: true,\n\tisKt: false,\n\tselectedTimeIndex: 0\n}\n\nexport type ApiData = {\n\thours: number\n  minutes: number\n  winds: WindApi[]\n}\n\ntype WindApi = {\n  height: number,\n  degree: number,\n  speed: number\n}\n\n\nconst maxScale = 3\nconst minScale = 0.5\n\nexport const Reducer = reducerWithInitialState(initialState)\n\t.case(StartFetchDatesAction, state => {\n\t\tconst fetchingDates = true\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(FinishFetchDatesAction, state => {\n\t\tconst fetchingDates = false\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(StartFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = true\n\t\treturn { ...state, fetchingPibalData }\n\t})\n\t// 拡大する\n\t.case(EnlargeAction, (state) => {\n\t\tlet scale = Math.min(state.scale + 0.1, maxScale)\n\t\treturn { ...state, scale }\n\t})\n\t// 縮小する\n\t.case(ShirinkAction, (state) => {\n\t\tlet scale = Math.max(state.scale - 0.1, minScale)\n\t\treturn { ...state, scale }\n\t})\n\t// Datesを取ってきてstateに入れる。\n\t.case(SetDateInfoListAction, (state, dateInfoList) => {\n\t\treturn { ...state, dateInfoList }\n\t})\n\t// pibalDateを取ってきてcurrentに入れる。\n\t.case(SetCurrentWindInfoListAction, (state, selected) => {\n\t\tconst selectedTimeIndex = selected.windInfoList.length - 1\n\t\tconst scale = 1.0\n\t\treturn { ...state, selected, scale, selectedTimeIndex }\n\t})\n\t// そのパイバルデータを見せる or 見せない\n\t.case(ToggleVisibleAction, (state, pibalIndex) => {\n\t\tconst currentSelected = state.selected\n\t\tif (currentSelected) {\n\t\t\tconst visible = !currentSelected.windInfoList[pibalIndex].visible\n\t\t\tconst currentWindInfoList = currentSelected.windInfoList\n\t\t\tconst windInfoList = currentWindInfoList.map((w, i) => i === pibalIndex ? { ...w, visible} : w)\n\n\t\t\tconst selected = { ...currentSelected, windInfoList}\n\t\t\treturn { ...state, selected }\n\t\t}\n\t\treturn state\n\t})\n\t// login\n\t.case(LoginAction, (state, token) => {\n\t\treturn { ...state, token } \n\t})\n\t// logout\n\t.case(LogoutAction, state => {\n\t\tconst token = \"\"\n\t\treturn { ...state, token } \n\t})\n\t.case(ToggleIsToAction, state => {\n\t\tconst isTo = !state.isTo\n\t\treturn { ...state, isTo }\n\t})\n\t.case(ToggleGlaphIsToAction, state => {\n\t\tconst glpahIsTo = !state.glpahIsTo\n\t\treturn { ...state, glpahIsTo }\n\t})\n\t.case(ToggleIsKtAction, state => {\n\t\tconst isKt = !state.isKt\n\t\treturn { ...state, isKt }\n\t})\n\t.case(SelectTimeAction, (state, selectedTimeIndex) => {\n\t\treturn { ...state, selectedTimeIndex }\n\t})\n\t.build()","import { DateInfo, WindInfo, Wind } from \"./../states/IPibalDataList\"\n\ntype WindApi = {\n\theight: number,\n\tdegree: number,\n\tspeed: number\n}\n\ntype ApiData = {\n\thours: number\n\tminutes: number\n\twinds: WindApi[]\n}\n\ntype ApiDateAndTiming = {\n\tdate: string\n\ttiming: string\n}\n\nexport function authorize(user: string, pass: string): Promise<{token?: string, error?: string}> {\n  const body = JSON.stringify({postUser: user, postPass: pass})\n\n  return fetch(\"https://oval-silicon-280513.an.r.appspot.com/api/v1/authenticate\", {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"omit\",\n    headers:{\n      'content-type': 'application/json; charset=UTF-8'\n    },\n    body})\n    .then(res => res.json())\n    .then(json => {\n      if (json.success) {\n        localStorage.setItem(\"auth_token\", json.token)\n        return { token: json.token }\n      }\n      return { error: 'such user is not exist'}\n    })\n    .catch(error => {\n      return { error }\n    })\n}\n\nexport function fetchDetes(token: string): Promise<{dateList?: DateInfo[], error?: string}> {\n  return fetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/dates', {\n    headers: { \n      'x-access-token': token,\n      mode: \"cors\",\n      cache: \"no-cache\" }\n  }).then(res => res.json())\n  .then(obj => {\n    const apiDateList: ApiDateAndTiming[] = obj.data\n    let dateList: DateInfo[] = apiDateList.map((apiDate, index) => {\n      return {\n        id: index,\n        date: getDateFrom(apiDate.date),\n        timePeriod: apiDate.timing\n      }\n    })\n    dateList.sort((a, b) => b.date.getTime() - a.date.getTime())\n    return { dateList }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nexport function fetchWindInfo(token: string, date: Date, timePeriod: string): Promise<{windInfoList?: WindInfo[], error?: string}> {\n  const yyyymmdd = getYYYYMMDD(date)\n  return fetch(`https://oval-silicon-280513.an.r.appspot.com/api/v1/${yyyymmdd}/${timePeriod}`, {\n\t\theaders: { \n      'x-access-token': token,\n      mode: \"cors\",\n      cache: \"no-cache\" }\n  })\n  .then(res => res.json())\n  .then(obj => {\n    if (obj.data.length) {\n      const windInfoList: WindInfo[] = []\n      const infos: ApiData[] = obj.data[0].infos\n      infos.forEach(info => {\n\t\t\t\tconst hours = info.hours\n\t\t\t\tconst minutes = info.minutes\n\t\t\t\tconst winds: Wind[] = info.winds.map(w => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\talt: w.height,\n\t\t\t\t\t\tdeg: w.degree,\n\t\t\t\t\t\tspd: w.speed\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\twindInfoList.push({\n\t\t\t\t\thours: hours,\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\twinds: winds,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n      })\n      return { windInfoList }\n    }\n    return { error: 'no such data' }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nfunction getYYYYMMDD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + m + d\n  return result\n}\n\nfunction getDateFrom(yyyymmdd: string): Date {\n\tconst year = Number(yyyymmdd.slice(0, 4))\n\tconst month = Number(yyyymmdd.slice(4, 6))\n\tconst day = Number(yyyymmdd.slice(6))\n\treturn new Date(year, month, day)\n}","import { AppState } from '../store'\nimport { DateInfo } from '../states/IPibalDataList'\n\nexport const getToken = (state: AppState): string => state.state.token\n\nexport const getDateInfoList = (state: AppState): DateInfo[] => state.state.dateInfoList","import { push } from 'react-router-redux'\nimport { take, put, fork, call, select, takeEvery } from 'redux-saga/effects'\nimport { authorize, fetchDetes, fetchWindInfo } from './common/api'\nimport { REQUEST_LOGIN, REQUEST_LOGOUT, START_CREATE_TOKEN, FINISH_CREATE_TOKEN, START_FETCH_DATES, FINISH_FETCH_DATES, SET_DATES, SELECT_FLIGHT, SET_WIND } from './actions'\nimport { getToken, getDateInfoList } from './selectors'\nimport { DateInfo, PibalDataInfo } from './states/IPibalDataList'\n\nfunction* authSaga() {\n  while (true) {\n    const action = yield take(START_CREATE_TOKEN)\n    \n    const username = action.payload.username\n    const password = action.payload.password\n\n    const { token, error } = yield call(authorize, username, password)\n\n    if (!token && error) {\n      yield put({ type: FINISH_CREATE_TOKEN })\n      localStorage.clear()\n      yield put({ type: REQUEST_LOGOUT })\n      continue; // 認証に失敗したらリトライに備えて最初に戻る\n    }\n\n    if (token) {\n      yield put({ type: REQUEST_LOGIN, payload: token })\n      yield put({ type: FINISH_CREATE_TOKEN });\n    }\n  }\n}\n\nfunction* pageSaga() {\n  while (true) {\n    // ログイン成功するまでずっと待つ\n    yield take(FINISH_CREATE_TOKEN)\n    // ページを移動する\n    yield put(push('/'))\n  }\n}\n\nfunction* fetchDatesSaga() {\n  const token = yield select(getToken)\n  const { dateList, error } = yield call(fetchDetes, token)\n\n  if (!dateList && error) {\n    yield put({ type: FINISH_FETCH_DATES })\n    localStorage.clear()\n    yield put({ type: REQUEST_LOGOUT })\n    yield put(push('/'))\n  }\n\n  if (dateList) {\n    yield put({ type: SET_DATES, payload: dateList })\n    yield put({ type: FINISH_FETCH_DATES })\n    yield put({ type: SELECT_FLIGHT, payload: 0 })\n  }\n}\n\nfunction* selectFlightSaga() {\n  while(true) {\n    const action = yield take(SELECT_FLIGHT)\n    const id = action.payload\n    const token = yield select(getToken)\n    const dateInfoList = yield select(getDateInfoList)\n    const dateInfo: DateInfo = dateInfoList[id]\n\n    const { windInfoList, error } = yield call(fetchWindInfo, token, dateInfo.date, dateInfo.timePeriod)\n\n    if (!windInfoList && error) {\n      localStorage.clear()\n      yield put({ type: REQUEST_LOGOUT })\n      yield put(push('/'))\n    }\n\n    if (windInfoList) {\n      const pibalDataInfo: PibalDataInfo = {\n        id: id,\n        date: dateInfo.date,\n        timePeriod: dateInfo.timePeriod,\n        windInfoList: windInfoList\n      } \n      yield put({type: SET_WIND, payload: pibalDataInfo })\n    }\n  }\n}\n\nexport default function* rootSaga() {\n  yield fork(authSaga);\n  yield fork(pageSaga);\n  yield takeEvery(START_FETCH_DATES, fetchDatesSaga)\n  yield fork(selectFlightSaga)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers, createStore, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga';\nimport IState from './states/IState'\nimport { Reducer } from './reducer'\nimport rootSaga from './sagas'\nimport logger from 'redux-logger'\nimport history from './common/history'\n// import createHistory from 'history/createHashHistory';\nimport { routerMiddleware, connectRouter, RouterState } from 'connected-react-router'\n\nexport type AppState = {\n  state: IState\n  router: RouterState\n}\n\nexport default function configureStore(initialState?: AppState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const middlewares = [sagaMiddleware, routerMiddleware(history)]\n\n  if (process.env.NODE_ENV !== 'production') {\n    middlewares.push(logger)\n  }\n  const store = createStore(\n    combineReducers<AppState>({\n      state: Reducer,\n      router: connectRouter(history)\n    }),\n    initialState,\n    applyMiddleware(\n      ...middlewares\n    )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};"],"sourceRoot":""}