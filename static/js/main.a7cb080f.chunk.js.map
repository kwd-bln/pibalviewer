{"version":3,"sources":["actions/index.ts","containers/auth/Auth.tsx","components/InputComp.tsx","containers/auth/Login.tsx","components/SelectList.tsx","components/Glaph.tsx","components/TopPageForm.tsx","containers/TopPageContainer.ts","App.tsx","serviceWorker.ts","reducer.ts","store.ts","index.tsx"],"names":["actionCreator","actionCreatorFactory","LoginAction","InputUserAction","InputPassAction","StartLoadingAction","FinishLoadingAction","StartCreateTokenAction","FinishCreateTokenAction","StartFetchDatesAction","FinishFetchDatesAction","StartFetchPibalDataAction","FinishFetchPibalDataAction","EnlargeAction","ShirinkAction","ToggleVisibleAction","SelectFlightAction","SetDateInfoListAction","SetCurrentWindInfoListAction","cl","console","log","bind","setLoginState","history","dispatch","a","auth_token","localStorage","fetch","headers","then","res","json","success","clear","push","catch","error","Auth","props","state","isLoading","this","loading","login","handleSetLoginState","children","to","React","Component","withRouter","connect","appState","token","InputComp","value","type","onChange","e","onChangeValue","target","getToken","username","password","body","JSON","stringify","method","setItem","Login","handleOnClickSubmitButton","onSubmit","handleSubmit","name","handleOnChangeValueOfUserInput","handleOnChangeValueOfPassInput","renderSubmit","handleClickLoginButton","SelectList","options","dateInfoList","map","dateInfo","index","label","getYYYY_MM_DD","date","timePeriod","length","className","defaultValue","selectedOption","Glaph","canvasRef","useRef","useEffect","pointsList","windInfoList","forEach","info","points","currentX","currentY","winds","wind","rad","deg","Math","PI","spd","sin","cos","x","y","hours","minutes","visible","d","maxR","aryMax","b","max","data","p","hypot","reduce","getRFrom","ctx","canvas","current","width","height","getContext","scaleDistance","oneThirdOfMaxR","ceil","Number","toPrecision","getScaleDistanceFrom","scale","save","strokeStyle","fillStyle","beginPath","moveTo","arc","fill","canvasWidth","canvasHeight","lineTo","stroke","scaleLine","restore","font","textAlign","fillText","toString","scaleLineHeight","numOfPoints","hueStep","min","hue","hslStroke","hslFill","point","ref","TopPageForm","handleOnLoadDates","selected","handleOnLoadPiabalInfo","Fragment","handleOnChangeValue","fetchingDates","fetchingPibalData","handleClickEnlargeButton","handleClickShrinkButton","handleOnSelectToggleButton","fetchDetes","fetchWindInfo","obj","mappedList","apiDate","id","getDateFrom","timing","sort","getTime","err","yyyymmdd","getFullYear","m","getMonth","slice","getDate","getYYYYMMDD","infos","w","alt","degree","speed","getPibalInfo","year","month","day","Date","App","path","component","exact","TopPageContainer","Boolean","window","location","hostname","match","initialState","creatingToken","hasError","undefined","Reducer","reducerWithInitialState","case","selectedDateInfo","find","pibalIndex","currentVisible","build","storeEnhancers","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","combineReducers","applyMiddleware","thunk","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.a7cb080f.chunk.js","sourcesContent":["import { actionCreatorFactory } from '../../node_modules/typescript-fsa';\nimport { ApiData } from '../reducer'\n// import { Dispatch } from \"redux\";\nimport { DateInfo, WindInfo } from '../states/IPibalDataList';\n\nconst actionCreator = actionCreatorFactory()\n\nexport const LoginAction = actionCreator<string>('LOGIN')\n\nexport const InputUserAction = actionCreator<string>('INPUT_USER')\n\nexport const InputPassAction = actionCreator<string>('INPUT_PASS')\n\nexport const StartLoadingAction = actionCreator('START_LOADING')\n\nexport const FinishLoadingAction = actionCreator('FINISH_LOADING')\n\nexport const StartCreateTokenAction = actionCreator('START_CREATE_TOKEN')\n\nexport const FinishCreateTokenAction = actionCreator('FINISH_CREATE_TOKEN')\n\nexport const StartFetchDatesAction = actionCreator('START_FETCH_DATES')\n\nexport const FinishFetchDatesAction = actionCreator('FINISH_FETCH_DATES')\n\nexport const StartFetchPibalDataAction = actionCreator('START_FETCH_PIBALDATA')\n\nexport const FinishFetchPibalDataAction = actionCreator('FINISH_FETCH_PIBALDATA')\n\nexport const EnlargeAction = actionCreator('ACTION_ENLARGE')\n\nexport const ShirinkAction = actionCreator('ACTION_SHRINK')\n\nexport const ToggleVisibleAction = actionCreator<number>('TOGGLE_VISIBLE')\n\nexport const SelectFlightAction = actionCreator<number>('SELECT_FLIGHT')\n\nexport const GetDataErrorAction = actionCreator<boolean>('GET_DATA_ERROR')\n\nexport const LoadDataAction = actionCreator<boolean>('LOAD_DATA_ERROR')\n\nexport const FetchedDataSuccessAction = actionCreator<ApiData>('FETCHED_DATA')\n\nexport const SetDateInfoListAction = actionCreator<DateInfo[]>('SET_DATES')\n\nexport const SetCurrentWindInfoListAction = actionCreator<WindInfo[]>('SET_WIND')","import React from 'react'\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../store\"\nimport { withRouter } from 'react-router'\nimport { Dispatch } from 'redux'\nimport { LoginAction, StartLoadingAction, FinishLoadingAction } from \"../../actions/index\";\n\nimport { Redirect, Route } from 'react-router-dom'\nimport * as H from 'history';\n\nconst cl = console.log.bind(console)\n\ninterface OwnProps {\n  login: boolean\n  loading: boolean\n  history: H.History\n  token: string\n}\n\ninterface State {\n  isLoading: boolean\n}\n\ninterface AuthHandler {\n  handleSetLoginState(history: H.History):void\n}\n\nexport const setLoginState = (history: H.History): Function => {\n  return async (dispatch: Dispatch) => {\n    const auth_token = localStorage.auth_token\n    // token が見つからなかったら return\n    if (!auth_token) return\n    dispatch(StartLoadingAction())\n    await fetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/successLogin', {\n      headers: { 'x-access-token': auth_token }\n    })\n    .then(res => {\n      return res.json()\n    })\n    .then(json => {\n      if (json.success) {\n        dispatch(LoginAction(auth_token))\n      } else {\n        localStorage.clear()\n      }\n      dispatch(FinishLoadingAction())\n      history.push('/')\n      return \n    })\n    .catch(error => {\n      console.log(error)\n      dispatch(FinishLoadingAction())\n    })\n  } \n}\n\n\nclass Auth extends React.Component<OwnProps&AuthHandler, State> {\n  constructor(props: OwnProps&AuthHandler) {\n    super(props)\n    this.state = {\n      isLoading: false,\n    }\n  }\n  async componentWillMount() {\n    console.log(\"Auth componentWillMount!!\", this.props.loading)\n    if (!this.props.loading && !this.props.login) {\n      cl(\"this.props componentDidMount\", this.props)\n      await this.props.handleSetLoginState(this.props.history)\n    }\n  }\n\n  render() {\n    console.log(\"authRender\", this.props.loading)\n    \n    if (this.props.loading) {\n      return <div>loading</div>\n    } else {\n      if (this.props.login) {\n        console.log(\"Go to Top page\")\n        return (\n          <Route children={this.props.children} />\n        )\n      } else {\n        console.log(\"Go to Login page\")\n        return (\n          <Redirect to={'/login'} />\n        )\n      }\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): AuthHandler => {\n  return {\n    handleSetLoginState: async (history: H.History) => {await setLoginState(history)(dispatch)}\n  }\n}\n\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    login: appState.state.login,\n    token: appState.state.token,\n    loading: appState.state.loading\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth))","import React, { FC } from 'react';\n\ninterface Props {\n  name: string,\n  value: string,\n  onChangeValue: Function\n}\n\nconst InputComp: FC<Props> = props => {\n  const { value } = props;\n  return (\n    <>\n    <input type=\"text\" value={value} onChange={(e) => props.onChangeValue(e.target.value)}/>\n    </>\n  );\n};\n\nexport default InputComp;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { Dispatch } from \"redux\";\nimport { LoginAction, InputPassAction, InputUserAction, StartLoadingAction, FinishLoadingAction, StartCreateTokenAction, FinishCreateTokenAction } from \"../../actions/index\";\nimport { withRouter } from 'react-router';\nimport InputComp from '../../components/InputComp'\nimport * as H from 'history';\n// const cl = console.log.bind(console)\n\ninterface OwnProps {\n  login: boolean\n  loading: boolean\n  username: string\n  password: string\n  history: H.History\n}\n\nexport interface LoginHandler {\n  handleClickLoginButton(): void\n  handleOnChangeValueOfUserInput(value: string): void\n  handleOnChangeValueOfPassInput(value: string): void\n  handleOnClickSubmitButton(username: string, password: string, history: H.History): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    login: appState.state.login,\n    loading: appState.state.loading,\n    username: appState.state.username,\n    password: appState.state.password\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): LoginHandler => {\n  return {\n    handleClickLoginButton: () => { dispatch(LoginAction(\"aaa\")) },\n    handleOnChangeValueOfUserInput: (value: string) => { dispatch(InputUserAction(value))},\n    handleOnChangeValueOfPassInput: (value: string) => { dispatch(InputPassAction(value))},\n    handleOnClickSubmitButton: async (username: string, password: string, history: H.History) => { getToken(username, password, history)(dispatch) }\n  }\n}\n\nexport const getToken = (username: string, password: string, history: H.History): Function => {\n  return async (dispatch: Dispatch) => {\n    const body = JSON.stringify({\n      \"postUser\": username,\n      \"postPass\": password,\n    })\n    console.log(body)\n    console.log(\"getToken fetch authenticate\")\n    dispatch(StartCreateTokenAction())\n    await fetch(\"https://oval-silicon-280513.an.r.appspot.com/api/v1/authenticate\", {\n      method: \"POST\",\n      headers:{\n        'content-type': 'application/json; charset=UTF-8'\n      },\n      body\n    })\n    .then(res => {\n      console.log(\"res.jsonのところ\")\n      return res.json()\n    })\n    .then(json => {\n      if (json.success) {\n        localStorage.setItem(\"auth_token\", json.token)\n        dispatch(LoginAction(json.token))\n      }\n      dispatch(FinishCreateTokenAction())\n      history.push('/')\n      return \n    })\n    .catch(error => {\n      console.log(\" getToken error:\", error)\n      dispatch(FinishCreateTokenAction())\n      history.push('/')\n    })\n  } \n}\n\n\n\nexport class Login extends React.Component<OwnProps&LoginHandler> {\n\n  async handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    const username = this.props.username\n    const password = this.props.password\n    const body = JSON.stringify({\n      \"postUser\": username,\n      \"postPass\": password,\n    })\n    console.log(\"handle submit try\")\n    // await fetch(\"https://oval-silicon-280513.an.r.appspot.com/api/v1/authenticate\", {\n    //   method: \"POST\",\n    //   headers:{\n    //     'content-type': 'application/json; charset=UTF-8'\n    //   },\n    //   body\n    // }).then(res => res.json())\n    // .then(obj => console.log(obj))\n    await this.props.handleOnClickSubmitButton(username, password, this.props.history)\n  }\n\n  \n  renderSubmit() {\n    return this.props.loading ? <p>Loading</p> : <input type=\"submit\" value=\"Send\" />;\n  }\n\n  render() {\n    console.log(\"login render\", this.props.loading, this.props.login)\n    return (\n      <div>\n        <p>未ログイン</p>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <ul>\n            <li>\n              <p>name</p>\n              <p><InputComp name=\"name\" value={this.props.username} onChangeValue={this.props.handleOnChangeValueOfUserInput}/></p>\n            </li>\n            <li>\n              <p>Password</p>\n              <p><InputComp name=\"pass\" value={this.props.password} onChangeValue={this.props.handleOnChangeValueOfPassInput}/></p>\n            </li>\n          </ul>\n          {this.renderSubmit()}\n        </form>\n        {/* <button onClick={() => {\n          this.props.handleClickLoginButton()\n          this.props.history.push('/')\n          }}>ログインする</button> */}\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login))","import React from 'react'\nimport Select from 'react-select'\nimport { ValueType } from \"react-select\";\nimport { DateInfo } from './../states/IPibalDataList'\nimport { getYYYY_MM_DD } from './../containers/TopPageContainer'\n\ntype OptionType = { label: string; value: number };\n\ntype Props = {\n  dateInfoList: DateInfo[]\n  onChange: (value: number) => void\n}\n\nconst SelectList: React.FC<Props> = (props) => {\n  const options: OptionType[] = props.dateInfoList.map((dateInfo, index) => {\n    return {\n      value: index,\n      label: `${getYYYY_MM_DD(dateInfo.date)} - ${dateInfo.timePeriod}`\n    }\n  })\n  if (!options.length) return <p>nodata</p>\n  \n  return (\n    <div className=\"select-dates-div\">\n      <Select options={options} defaultValue={options[0]} className='dates-select' onChange={(selectedOption: ValueType<OptionType>) => {\n        const value = (selectedOption as OptionType).value\n        props.onChange(value)\n      }} />\n    </div>\n  )\n}\n\nexport default SelectList","import React, { useEffect, useRef } from \"react\";\n\nimport { WindInfo } from \"../states/IPibalDataList\"\n\ntype Point = {\n  x: number,\n  y: number\n}\n\ntype PointsInfo = {\n  hours: number,\n  minutes: number,\n  visible: boolean,\n  points: Point[]\n}\n\ninterface Props {\n  windInfoList: WindInfo[]\n}\n\nconst Glaph: React.FC<Props> = (props) => {\n  const canvasRef = useRef(null);\n\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    canvas.width = 480;\n    canvas.height = 480;\n\n    return canvas.getContext('2d');\n  };\n\n  const getCanvasWidth = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.width\n  }\n\n  const getCanvasHeight = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.height\n  }\n\n  useEffect(() => {    \n    // どこの点をとるかの計算\n    let pointsList: PointsInfo[] = []\n\n    // 時間ごとにpointsに直していく\n    const ktToMPer60s = 30.8667 // x (kt) => ktToMPer60s * x (m/100s) で変換\n    props.windInfoList.forEach( info => {\n      let points: Point[] = []\n      let currentX = 0\n      let currentY = 0\n\n      info.winds.forEach( wind => {\n        const rad: number = wind.deg * (Math.PI / 180);\n        currentX += wind.spd * ktToMPer60s * Math.sin(rad)\n        currentY += wind.spd * ktToMPer60s * Math.cos(rad)\n        points.push({\n          x: currentX,\n          y: currentY\n        })\n      })\n\n      pointsList.push({\n        hours: info.hours,\n        minutes: info.minutes,\n        visible: info.visible,\n        points: points\n      })\n    })\n\n    console.log(props.windInfoList.map(d => d.winds) )\n\n    // 最も遠い点の距離の計算\n    const maxR = getRFrom(pointsList)\n\n    /*  */\n    const ctx: CanvasRenderingContext2D = getContext();\n    const originX: number = 240\n    const originY: number = 240\n\n    // scaleDistance * 3 = 144 になるように\n    const scaleDistance = getScaleDistanceFrom(maxR)\n\n    const scaleLine = 48\n    const scale = scaleLine / scaleDistance\n    console.log(\"maxR = \", maxR, \"scale\", scale, scaleDistance)\n\n    // 原点の描画\n    ctx.save();\n    ctx.strokeStyle = \"#707070\";\n    ctx.fillStyle = \"#707070\";\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 軸線の描画\n    const padding = 50\n    const canvasWidth = getCanvasWidth() - padding\n    const canvasHeight = getCanvasHeight() - padding\n    ctx.beginPath();\n    ctx.moveTo(padding, originY);\n    ctx.lineTo(canvasWidth, originY);\n    ctx.moveTo(originX, padding);\n    ctx.lineTo(originX, canvasHeight);\n    // 斜め線\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(canvasWidth, canvasHeight);\n    ctx.moveTo(canvasWidth, padding);\n    ctx.lineTo(padding, canvasHeight);\n    ctx.stroke()\n\n    // scale円の描画\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, scaleLine, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 2, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 3, 0, Math.PI * 2)\n    ctx.stroke()\n\n    // scaleの描画\n    ctx.beginPath()\n    const scaleLineHeight = 10\n    ctx.moveTo(canvasWidth * 0.3, canvasHeight)\n    ctx.lineTo(canvasWidth * 0.3, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight)\n    ctx.stroke()\n    ctx.restore();\n\n    // scaleのテキストの描画\n    ctx.save();\n    ctx.fillStyle = \"black\"\n    ctx.font = \"10px\"\n    ctx.textAlign = \"center\"\n    ctx.fillText(scaleDistance.toString() + 'm',\n      canvasWidth * 0.3 + scaleLine * 0.5,\n      canvasHeight + scaleLineHeight * 2.5)\n    ctx.restore()\n\n    //　各点のプロット\n    let numOfPoints = pointsList.length\n    console.log(pointsList)\n    const hueStep = Math.min(360 / numOfPoints, 40)\n    pointsList.forEach((data, index) => {\n      if (data.visible) {\n        const points = data.points\n        // 色の決定\n        const hue = Math.ceil(hueStep * index)\n        const hslStroke = \"hsl(\" + hue + \", 100%, 50%)\";\n        const hslFill = \"hsl(\" + hue + \", 80%, 45%)\";\n\n        // 一つの時間のpibaldataを描画\n        let x = originX\n        let y = originY\n        points.forEach(point => {\n          ctx.save();\n          ctx.strokeStyle = hslStroke;\n          ctx.fillStyle = hslFill;\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          x = originX + point.x * scale\n          y = originY - point.y * scale\n          ctx.lineTo(x, y);\n          ctx.stroke();\n          ctx.moveTo(x, y);\n          ctx.arc(x, y, 3, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        })\n      }\n    })\n\n    // scaleのプロット\n  })\n\n  return (\n    <div className=\"rect-wrap\">\n      <canvas className=\"pibal-glaph\" ref={canvasRef} />\n    </div>\n  )\n\n}\n\n\n// pointsの集合であるpointsListから最大半径を求めるための関数\nfunction getRFrom(pointsList: PointsInfo[]): number {\n  const aryMax = function(a: number, b:number): number {return Math.max(a, b)}\n  return pointsList\n  .map(data => data.points.map(p => Math.hypot(p.x, p.y)).reduce(aryMax))\n  .reduce(aryMax, 1)\n}\n\n// scale円の単位距離を導出\nfunction getScaleDistanceFrom(maxR: number): number {\n  const oneThirdOfMaxR: number = Math.ceil(maxR / 3.2)\n  \n  // 3 * scale = maxDist / 1.1 になるようにする\n  const ScaleDistance = Math.max(Number(oneThirdOfMaxR.toPrecision(2)), 10)\n  return ScaleDistance\n}\n\nexport default Glaph","import React from 'react'\nimport { TopPageHandler } from '../containers/TopPageContainer';\nimport SelectList from './SelectList'\nimport Glaph from './Glaph'\nimport { PibalDataInfo, DateInfo } from '../states/IPibalDataList'\n\ninterface OwnProps {\n\ttoken: string\n\tloading: boolean\n\tfetchingDates: boolean\n\tfetchingPibalData: boolean\n  scale: number\n  selected?: PibalDataInfo\n  dateInfoList: DateInfo[]\n}\ntype Props = OwnProps & TopPageHandler\nexport class TopPageForm extends React.Component<Props> {\n\tcomponentDidMount() {\n\t\tconsole.log(\"componentDidMount\")\n\t\tif (this.props.token) {\n\t\t\tif (this.props.dateInfoList.length === 0) {\n\t\t\t\t// dateInfoListがからのとき、APIを叩く\n\t\t\t\tconsole.log(\"fetch LoadDates\")\n\t\t\t\tthis.props.handleOnLoadDates(this.props.token)\n\t\t\t} else if (this.props.selected && this.props.selected.windInfoList.length === 0) {\n\t\t\t\tconst selected: PibalDataInfo = this.props.selected\n\t\t\t\tthis.props.handleOnLoadPiabalInfo(selected.date, selected.timePeriod, this.props.token)\n\t\t\t}\n\t\t}\n\t}\n\n\tcomponentDidUpdate() {\n\t\tif (this.props.token) {\n\t\t\tconsole.log(\"fetch LoadPibalInfo\")\n\t\t\tif (this.props.selected && this.props.selected.windInfoList.length === 0) {\n\t\t\t\tconst selected: PibalDataInfo = this.props.selected\n\t\t\t\tthis.props.handleOnLoadPiabalInfo(selected.date, selected.timePeriod, this.props.token)\n\t\t\t}\n\t\t}\n\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<SelectList dateInfoList={this.props.dateInfoList} onChange={this.props.handleOnChangeValue}/>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.props.selected) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t<Glaph windInfoList={this.props.selected.windInfoList}/>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t\t{/* <Glaph dataList={this.state.current.dataList} /> */}\n\t\t\t\t{/* <div className='arrow-table'>\n\t\t\t\t\t<Table dataList={this.state.current.dataList} dateText={getSelectText(this.state.current.date)} />\n\t\t\t\t</div> */}\n\t\t\t\t{/* <ShowState inputValue={this.props.inputValue} selectedValue={this.props.selectedValue} clickCount={this.props.clickCount} /> */}\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction } from \"../actions/index\";\nimport { StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, FinishFetchPibalDataAction, SetDateInfoListAction, SetCurrentWindInfoListAction } from \"../actions/index\";\nimport { TopPageForm } from \"../components/TopPageForm\";\nimport { AppState } from \"../store\"\nimport { DateInfo, WindInfo, Wind } from \"./../states/IPibalDataList\"\n\ntype WindApi = {\n\theight: number,\n\tdegree: number,\n\tspeed: number\n}\n\ntype ApiData = {\n\thours: number\n\tminutes: number\n\twinds: WindApi[]\n}\n\ntype ApiDateAndTiming = {\n\tdate: string\n\ttiming: string\n}\n\n\nexport interface TopPageHandler {\n\thandleClickEnlargeButton(): void\n\thandleClickShrinkButton(): void\n\thandleOnChangeValue(value: number): void\n\thandleOnSelectToggleButton(value: number): void\n\thandleOnLoadDates(token: string): void\n\thandleOnLoadPiabalInfo(date: Date, timePeriod: string, token: string): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n\treturn {\n\t\ttoken: appState.state.token,\n\t\tfetchingDates: appState.state.fetchingDates,\n\t\tfetchingPibalData: appState.state.fetchingPibalData,\n\t\tscale: appState.state.scale,\n\t\tselected: appState.state.selected,\n\t\tdateInfoList: appState.state.dateInfoList\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): TopPageHandler => {\n\treturn {\n\t\thandleClickEnlargeButton: () => { dispatch(EnlargeAction()) },\n\t\thandleClickShrinkButton: () => { dispatch(ShirinkAction()) },\n\t\thandleOnChangeValue: (value: number) => { dispatch(SelectFlightAction(value)) },\n\t\thandleOnSelectToggleButton: (value: number) => { dispatch(ToggleVisibleAction(value)) },\n\t\thandleOnLoadDates: (token: string) => { fetchDetes(token)(dispatch) },\n\t\thandleOnLoadPiabalInfo: (date: Date, timePeriod: string, token: string) => { fetchWindInfo(date, timePeriod, token)(dispatch) }\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TopPageForm)\n\nexport const fetchDetes = (token: string): Function => {\n\treturn (dispatch: Dispatch): void => {\n\t\tdispatch(StartFetchDatesAction());\n\t\tfetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/dates', {\n\t\t\theaders: { 'x-access-token': token }\n\t\t}).then((res) => res.json())\n\t\t\t.then((obj) => {\n\t\t\t\tconsole.log(\"fetchDate\", obj)\n\t\t\t\tconst apiDateList: ApiDateAndTiming[] = obj.data\n\t\t\t\tlet mappedList: DateInfo[] = apiDateList.map((apiDate, index) => {\n          return {\n\t\t\t\t\t\tid: index,\n\t\t\t\t\t\tdate: getDateFrom(apiDate.date),\n\t\t\t\t\t\ttimePeriod: apiDate.timing\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\tmappedList.sort((a, b) => a.date.getTime() - b.date.getTime())\n\t\t\t\tdispatch(SetDateInfoListAction(mappedList))\n\t\t\t\tdispatch(FinishFetchDatesAction())\n\t\t\t\tif (mappedList.length !== 0) {\n\t\t\t\t\tdispatch(SelectFlightAction(0))\n\t\t\t\t}\n\t\t\t})\n\t\t\t.catch((err) => {\n\t\t\t\tconsole.log(\"error in fetchDetes:\", err)\n\t\t\t\tdispatch(FinishFetchDatesAction())\n\t\t\t});\n\t}\n}\n\nexport const fetchWindInfo = (date: Date, timePeriod: string, token: string) => {\n\treturn (dispatch: Dispatch): void => {\n\t\tgetPibalInfo(dispatch, date, timePeriod, token)\n\t}\n}\n\nfunction getPibalInfo(dispatch: Dispatch, date: Date, timePeriod: string, token: string) {\n\tconst yyyymmdd = getYYYYMMDD(date)\n\tdispatch(StartFetchPibalDataAction())\n\tfetch(`https://oval-silicon-280513.an.r.appspot.com/api/v1/${yyyymmdd}/${timePeriod}`, {\n\t\theaders: { 'x-access-token': token }\n\t})\n\t.then(res => res.json())\n\t.then(obj => {\n\t\tif (obj.data.length) {\n\t\t\tconst windInfoList: WindInfo[] = []\n\t\t\tconst infos: ApiData[] = obj.data[0].infos\n\t\t\tinfos.forEach(info => {\n\t\t\t\tconst hours = info.hours\n\t\t\t\tconst minutes = info.minutes\n\t\t\t\tconst winds: Wind[] = info.winds.map(w => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\talt: w.height,\n\t\t\t\t\t\tdeg: w.degree,\n\t\t\t\t\t\tspd: w.speed\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\twindInfoList.push({\n\t\t\t\t\thours: hours,\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\twinds: winds,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n\t\t\t})\n\t\t\tdispatch(SetCurrentWindInfoListAction(windInfoList))\n\t\t\tdispatch(FinishFetchPibalDataAction())\n\t\t}\n\t})\n\t.catch(err => {\n\t\tconsole.log(\"error in getPibalInfo:\", err)\n\t\tdispatch(FinishFetchPibalDataAction())\n\t})\n}\n\n\nfunction getDateFrom(yyyymmdd: string): Date {\n\tconst year = Number(yyyymmdd.slice(0, 4))\n\tconst month = Number(yyyymmdd.slice(4, 6))\n\tconst day = Number(yyyymmdd.slice(6))\n\treturn new Date(year, month, day)\n}\n\nexport function getYYYYMMDD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + m + d\n  return result\n}\n\nexport function getYYYY_MM_DD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + \"/\" + m + \"/\" + d\n  return result\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\n// import Term from './containers/auth/Term';\n// import Info from './containers/auth/Info';\nimport Auth from './containers/auth/Auth';\nimport Login from './containers/auth/Login';\n\nimport TopPageContainer from './containers/TopPageContainer';\n\nconst App: React.FC = () => {\n  return (\n    <HashRouter>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Auth>\n          <Route exact path=\"/\" component={TopPageContainer} />\n        </Auth>\n        <Route path=\"/detail/\" component={() => <>Detail!</>} />\n      </Switch>\n    </HashRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { reducerWithInitialState } from '../node_modules/typescript-fsa-reducers';\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction, SetCurrentWindInfoListAction } from './actions/index';\nimport { LoginAction, StartLoadingAction, FinishLoadingAction, StartCreateTokenAction, FinishCreateTokenAction, InputPassAction, InputUserAction, StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, FinishFetchPibalDataAction} from './actions/index'\nimport { SetDateInfoListAction } from './actions/index';\nimport IState from './states/IState'\nimport { PibalDataInfo } from './states/IPibalDataList'\n\nexport const initialState: IState = {\n\tlogin: false,\n\ttoken: \"\",\n\tusername: \"\",\n  password: \"\",\n\tloading: false,\n\tcreatingToken: false,\n\tfetchingDates: false,\n\tfetchingPibalData: false,\n\thasError: false,\n\tscale: 1,\n\tselected: undefined,\n\tdateInfoList: []\n}\n\nexport type ApiData = {\n\thours: number\n  minutes: number\n  winds: WindApi[]\n}\n\ntype WindApi = {\n  height: number,\n  degree: number,\n  speed: number\n}\n\n\nconst maxScale = 2\nconst minScale = 0.5\n\nexport const Reducer = reducerWithInitialState(initialState)\n\t.case(StartLoadingAction, (state) => {\n\t\tconst loading = true\n\t\treturn { ...state, loading }\n\t})\n\t.case(FinishLoadingAction, (state) => {\n\t\tconst loading = false\n\t\treturn { ...state, loading }\n\t})\n\t.case(StartCreateTokenAction, state => {\n\t\tconst creatingToken = true\n\t\treturn { ...state, creatingToken }\n\t})\n\t.case(FinishCreateTokenAction, state => {\n\t\tconst creatingToken = false\n\t\treturn { ...state, creatingToken }\n\t})\n\t.case(InputUserAction, (state, username) => {\n\t\treturn { ...state, username }\n\t})\n\t.case(InputPassAction, (state, password) => {\n\t\treturn { ...state, password }\n\t})\n\t.case(StartFetchDatesAction, state => {\n\t\tconsole.log(\"startFetchDatesAction\")\n\t\tconst fetchingDates = true\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(FinishFetchDatesAction, state => {\n\t\tconsole.log(\"FinishFetchDatesAction\")\n\t\tconst fetchingDates = false\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(StartFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = true\n\t\treturn { ...state, fetchingPibalData }\n\t})\n\t.case(FinishFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = false\n\t\treturn { ...state, fetchingPibalData}\n\t})\n\t// 拡大する\n\t.case(EnlargeAction, (state) => {\n\t\tlet scale = Math.min(state.scale + 0.1, maxScale)\n\t\treturn { ...state, scale }\n\t})\n\t// 縮小する\n\t.case(ShirinkAction, (state) => {\n\t\tlet scale = Math.max(state.scale - 0.1, minScale)\n\t\treturn { ...state, scale }\n\t})\n\t// Datesを取ってきてstateに入れる。\n\t.case(SetDateInfoListAction, (state, dateInfoList) => {\n\t\treturn { ...state, dateInfoList }\n\t})\n\t// pibalDateを取ってきてcurrentに入れる。\n\t.case(SetCurrentWindInfoListAction, (state, windInfoList) => {\n\t\tif (state.selected) {\n\t\t\tconst selected = { ...state.selected, windInfoList}\n\t\t\treturn { ...state, selected }\n\t\t}\n\t\treturn state\n\t})\n\t// どのフライトのパイバルデータを見せるか選択\n\t.case(SelectFlightAction, (state, id) => {\n\t\tconst selectedDateInfo = state.dateInfoList.find(d => d.id === id)\n\t\tif (selectedDateInfo) {\n\t\t\tconst selected: PibalDataInfo = {\n\t\t\t\tid: id,\n\t\t\t\tdate: selectedDateInfo.date,\n\t\t\t\ttimePeriod: selectedDateInfo.timePeriod,\n\t\t\t\twindInfoList: []\n\t\t\t}\n\t\t\treturn { ...state, selected }\n\t\t} else {\n\t\t\treturn { ...state }\n\t\t}\n\t})\n\t// そのパイバルデータを見せる or 見せない\n\t.case(ToggleVisibleAction, (state, pibalIndex) => {\n\t\tlet selected = state.selected\n\t\tif (selected) {\n\t\t\tlet currentVisible = selected.windInfoList[pibalIndex].visible\n\t\t\tselected.windInfoList[pibalIndex].visible = !currentVisible\n\t\t\treturn { ...state, selected}\n\t\t}\n\t\treturn state\n\t})\n\t// login\n\t.case(LoginAction, (state, token) => {\n\t\tconst login = true\n\t\treturn { ...state, login, token } \n\t})\n\t.build()","import { combineReducers, createStore, compose, applyMiddleware} from 'redux'\nimport IState from './states/IState'\nimport { Reducer } from './reducer'\nimport thunk from \"redux-thunk\"\n\nexport type AppState = {\n  state: IState\n}\n\nconst storeEnhancers = (window as any).__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\n\nconst store = createStore(\n  combineReducers<AppState>({\n    state: Reducer\n  }),\n  storeEnhancers(applyMiddleware(thunk))\n)\n\nexport default store","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport store from './store';\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}