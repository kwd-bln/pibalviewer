{"version":3,"sources":["actions/index.ts","containers/auth/Auth.tsx","components/InputComp.tsx","containers/auth/Login.tsx","common/history.ts","components/SelectList.tsx","components/Glaph.tsx","components/ArrowLine.tsx","components/Svg.tsx","components/Table.tsx","components/TopPageForm.tsx","containers/TopPageContainer.ts","App.tsx","serviceWorker.ts","reducer.ts","common/api.ts","selectors/index.ts","sagas.ts","index.tsx","store.ts"],"names":["actionCreator","actionCreatorFactory","LoginAction","InputUserAction","InputPassAction","StartLoadingAction","FinishLoadingAction","StartCreateTokenAction","FinishCreateTokenAction","StartFetchDatesAction","FinishFetchDatesAction","SetDateInfoListAction","StartFetchPibalDataAction","FinishFetchPibalDataAction","EnlargeAction","ShirinkAction","ToggleVisibleAction","SelectFlightAction","SetCurrentWindInfoListAction","cl","console","log","bind","setLoginState","history","dispatch","a","auth_token","localStorage","fetch","headers","then","res","json","success","clear","push","catch","error","Auth","props","state","isLoading","this","loading","login","handleSetLoginState","children","to","React","Component","withRouter","connect","appState","token","InputComp","value","type","onChange","e","onChangeValue","target","Login","username","password","handleOnClickSubmitButton","creatingToken","onSubmit","handleSubmit","name","handleOnChangeValueOfUserInput","handleOnChangeValueOfPassInput","renderSubmit","createHashHistory","SelectList","options","dateInfoList","map","dateInfo","index","label","getYYYY_MM_DD","date","timePeriod","length","className","defaultValue","selectedOption","Glaph","canvasRef","useRef","useEffect","pointsList","windInfoList","forEach","info","points","currentX","currentY","winds","wind","rad","deg","Math","PI","spd","sin","cos","x","y","hours","minutes","visible","d","maxR","aryMax","b","max","data","p","hypot","reduce","getRFrom","ctx","canvas","current","width","height","getContext","scaleDistance","oneThirdOfMaxR","ceil","Number","toPrecision","getScaleDistanceFrom","scale","save","strokeStyle","fillStyle","beginPath","moveTo","arc","fill","canvasWidth","canvasHeight","lineTo","stroke","scaleLine","restore","font","textAlign","fillText","toString","scaleLineHeight","numOfPoints","hueStep","min","hue","hslStroke","hslFill","point","ref","ArrowLine","arrow","position","id","g","d3","x0","y0","x1","y1","color","getInfoFrom","append","attr","line","key","Svg","style","Table","maxSpd","w","minSpd","maxHeightIndex","maxTimeIndex","arrowLineIndex","timeIndex","windIndex","selectedId","TopPageForm","handleOnLoadDates","Fragment","handleOnChangeValue","selected","fetchingDates","fetchingPibalData","handleClickEnlargeButton","handleClickShrinkButton","handleOnSelectToggleButton","getFullYear","getMonth","slice","getDate","App","path","component","exact","TopPageContainer","Boolean","window","location","hostname","match","initialState","hasError","undefined","Reducer","reducerWithInitialState","case","pibalIndex","currentVisible","build","authorize","user","pass","body","JSON","stringify","postUser","postPass","method","mode","cache","credentials","setItem","fetchDetes","obj","dateList","apiDate","getDateFrom","timing","sort","getTime","fetchWindInfo","yyyymmdd","m","getYYYYMMDD","infos","alt","degree","speed","year","month","day","Date","getToken","getUsername","getPassword","getDateInfoList","authSaga","pageSaga","fetchDatesSaga","selectFlightSaga","rootSaga","take","select","call","put","payload","action","pibalDataInfo","fork","takeEvery","store","sagaMiddleware","createSagaMiddleware","createStore","combineReducers","router","connectRouter","applyMiddleware","logger","routerMiddleware","run","configureStore","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","message"],"mappings":"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","file":"static/js/main.c5c904a6.chunk.js","sourcesContent":["import { actionCreatorFactory } from '../../node_modules/typescript-fsa';\nimport { ApiData } from '../reducer'\n// import { Dispatch } from \"redux\";\nimport { DateInfo, WindInfo, PibalDataInfo } from '../states/IPibalDataList'\n\nexport const REQUEST_LOGIN = 'REQUEST_LOGIN'\nexport const START_CREATE_TOKEN = 'START_CREATE_TOKEN'\nexport const FINISH_CREATE_TOKEN = 'FINISH_CREATE_TOKEN'\nexport const START_FETCH_DATES = 'START_FETCH_DATES'\nexport const FINISH_FETCH_DATES = 'FINISH_FETCH_DATES'\nexport const SET_DATES = 'SET_DATES'\nexport const SELECT_FLIGHT = 'SELECT_FLIGHT'\nexport const SET_WIND = 'SET_WIND'\n\nconst actionCreator = actionCreatorFactory()\n\nexport const LoginAction = actionCreator<string>(REQUEST_LOGIN)\n\nexport const InputUserAction = actionCreator<string>('INPUT_USER')\n\nexport const InputPassAction = actionCreator<string>('INPUT_PASS')\n\nexport const StartLoadingAction = actionCreator('START_LOADING')\n\nexport const FinishLoadingAction = actionCreator('FINISH_LOADING')\n\nexport const StartCreateTokenAction = actionCreator('START_CREATE_TOKEN')\n\nexport const FinishCreateTokenAction = actionCreator('FINISH_CREATE_TOKEN')\n\nexport const StartFetchDatesAction = actionCreator(START_FETCH_DATES)\n\nexport const FinishFetchDatesAction = actionCreator(FINISH_FETCH_DATES)\n\nexport const SetDateInfoListAction = actionCreator<DateInfo[]>(SET_DATES)\n\nexport const StartFetchPibalDataAction = actionCreator('START_FETCH_PIBALDATA')\n\nexport const FinishFetchPibalDataAction = actionCreator('FINISH_FETCH_PIBALDATA')\n\nexport const EnlargeAction = actionCreator('ACTION_ENLARGE')\n\nexport const ShirinkAction = actionCreator('ACTION_SHRINK')\n\nexport const ToggleVisibleAction = actionCreator<number>('TOGGLE_VISIBLE')\n\nexport const SelectFlightAction = actionCreator<number>('SELECT_FLIGHT')\n\nexport const GetDataErrorAction = actionCreator<boolean>('GET_DATA_ERROR')\n\nexport const LoadDataAction = actionCreator<boolean>('LOAD_DATA_ERROR')\n\nexport const FetchedDataSuccessAction = actionCreator<ApiData>('FETCHED_DATA')\n\nexport const SetCurrentWindInfoListAction = actionCreator<PibalDataInfo>(SET_WIND)","import React from 'react'\nimport { connect } from 'react-redux'\nimport { AppState } from \"../../store\"\nimport { withRouter } from 'react-router'\nimport { Dispatch } from 'redux'\nimport { LoginAction, StartLoadingAction, FinishLoadingAction } from \"../../actions/index\";\n\nimport { Redirect, Route } from 'react-router-dom'\nimport * as H from 'history';\n\nconst cl = console.log.bind(console)\n\ninterface OwnProps {\n  login: boolean\n  loading: boolean\n  history: H.History\n  token: string\n}\n\ninterface State {\n  isLoading: boolean\n}\n\ninterface AuthHandler {\n  handleSetLoginState(history: H.History):void\n}\n\nexport const setLoginState = (history: H.History): Function => {\n  return async (dispatch: Dispatch) => {\n    const auth_token = localStorage.auth_token\n    // token が見つからなかったら return\n    if (!auth_token) return\n    dispatch(StartLoadingAction())\n    await fetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/successLogin', {\n      headers: { 'x-access-token': auth_token }\n    })\n    .then(res => {\n      return res.json()\n    })\n    .then(json => {\n      if (json.success) {\n        dispatch(LoginAction(auth_token))\n      } else {\n        localStorage.clear()\n      }\n      dispatch(FinishLoadingAction())\n      history.push('/')\n      return \n    })\n    .catch(error => {\n      console.log(error)\n      dispatch(FinishLoadingAction())\n    })\n  } \n}\n\n\nclass Auth extends React.Component<OwnProps&AuthHandler, State> {\n  constructor(props: OwnProps&AuthHandler) {\n    super(props)\n    this.state = {\n      isLoading: false,\n    }\n  }\n  async componentDidMount() {\n    console.log(\"Auth componentWillMount!!\", this.props.loading)\n    if (!this.props.loading && !this.props.login) {\n      cl(\"this.props componentDidMount\", this.props)\n      await this.props.handleSetLoginState(this.props.history)\n    }\n  }\n\n  render() {\n    console.log(\"authRender\", this.props.loading)\n    \n    if (this.props.loading) {\n      return <div>loading</div>\n    } else {\n      if (this.props.login) {\n        console.log(\"Go to Top page\")\n        return (\n          <Route children={this.props.children} />\n        )\n      } else {\n        console.log(\"Go to Login page\")\n        return (\n          <Redirect to={'/login'} />\n        )\n      }\n    }\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): AuthHandler => {\n  return {\n    handleSetLoginState: async (history: H.History) => {await setLoginState(history)(dispatch)}\n  }\n}\n\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    login: appState.state.login,\n    token: appState.state.token,\n    loading: appState.state.loading\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Auth))","import React, { FC } from 'react';\n\ninterface Props {\n  name: string,\n  value: string,\n  onChangeValue: Function\n}\n\nconst InputComp: FC<Props> = props => {\n  const { value } = props;\n  return (\n    <>\n    <input type=\"text\" value={value} onChange={(e) => props.onChangeValue(e.target.value)}/>\n    </>\n  );\n};\n\nexport default InputComp;","import React from 'react';\nimport { connect } from \"react-redux\";\nimport { AppState } from \"../../store\";\nimport { Dispatch } from \"redux\";\nimport { InputPassAction, InputUserAction, StartCreateTokenAction } from \"../../actions/index\";\nimport { withRouter } from 'react-router';\nimport InputComp from '../../components/InputComp'\nimport * as H from 'history';\n\ninterface OwnProps {\n  login: boolean\n  loading: boolean\n  username: string\n  password: string\n  history: H.History\n  creatingToken: boolean\n}\n\nexport interface LoginHandler {\n  handleOnChangeValueOfUserInput(value: string): void\n  handleOnChangeValueOfPassInput(value: string): void\n  handleOnClickSubmitButton(username: string, password: string, history: H.History): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n  return {\n    login: appState.state.login,\n    loading: appState.state.loading,\n    username: appState.state.username,\n    password: appState.state.password,\n    creatingToken: appState.state.creatingToken\n  }\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): LoginHandler => {\n  return {\n    handleOnChangeValueOfUserInput: (value: string) => { dispatch(InputUserAction(value))},\n    handleOnChangeValueOfPassInput: (value: string) => { dispatch(InputPassAction(value))},\n    handleOnClickSubmitButton:  () => { dispatch(StartCreateTokenAction()) }\n  }\n}\n\nexport class Login extends React.Component<OwnProps&LoginHandler> {\n\n  async handleSubmit(e: React.FormEvent<HTMLFormElement>) {\n    const username = this.props.username\n    const password = this.props.password\n    await this.props.handleOnClickSubmitButton(username, password, this.props.history)\n  }\n\n  \n  renderSubmit() {\n    return this.props.creatingToken ? <p>Loading</p> : <input type=\"submit\" value=\"Send\" />;\n  }\n\n  render() {\n    console.log(\"login render\", this.props.loading, this.props.login)\n    return (\n      <div>\n        <p>未ログイン</p>\n        <form onSubmit={(e) => this.handleSubmit(e)}>\n          <ul>\n            <li>\n              <p>name</p>\n              <p><InputComp name=\"name\" value={this.props.username} onChangeValue={this.props.handleOnChangeValueOfUserInput}/></p>\n            </li>\n            <li>\n              <p>Password</p>\n              <p><InputComp name=\"pass\" value={this.props.password} onChangeValue={this.props.handleOnChangeValueOfPassInput}/></p>\n            </li>\n          </ul>\n          {this.renderSubmit()}\n        </form>\n      </div>\n    )\n  }\n}\n\nexport default withRouter(connect(mapStateToProps, mapDispatchToProps)(Login))","import { createHashHistory } from 'history';\n\nconst history = createHashHistory();\nexport default history;","import React from 'react'\nimport Select from 'react-select'\nimport { ValueType } from \"react-select\";\nimport { DateInfo } from './../states/IPibalDataList'\nimport { getYYYY_MM_DD } from './../containers/TopPageContainer'\n\ntype OptionType = { label: string; value: number };\n\ntype Props = {\n  dateInfoList: DateInfo[]\n  onChange: (value: number) => void\n}\n\nconst SelectList: React.FC<Props> = (props) => {\n  const options: OptionType[] = props.dateInfoList.map((dateInfo, index) => {\n    return {\n      value: index,\n      label: `${getYYYY_MM_DD(dateInfo.date)} - ${dateInfo.timePeriod}`\n    }\n  })\n  if (!options.length) return <p>nodata</p>\n  \n  return (\n    <div className=\"select-dates-div\">\n      <Select options={options} defaultValue={options[0]} className='dates-select' onChange={(selectedOption: ValueType<OptionType>) => {\n        const value = (selectedOption as OptionType).value\n        props.onChange(value)\n      }} />\n    </div>\n  )\n}\n\nexport default SelectList","import React, { useEffect, useRef } from \"react\";\n\nimport { WindInfo } from \"../states/IPibalDataList\"\n\ntype Point = {\n  x: number,\n  y: number\n}\n\ntype PointsInfo = {\n  hours: number,\n  minutes: number,\n  visible: boolean,\n  points: Point[]\n}\n\ninterface Props {\n  windInfoList: WindInfo[]\n}\n\nconst Glaph: React.FC<Props> = (props) => {\n  const canvasRef = useRef(null);\n\n  const getContext = (): CanvasRenderingContext2D => {\n    const canvas: any = canvasRef.current;\n    canvas.width = 480;\n    canvas.height = 480;\n\n    return canvas.getContext('2d');\n  };\n\n  const getCanvasWidth = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.width\n  }\n\n  const getCanvasHeight = (): number => {\n    const canvas: any = canvasRef.current;\n    return canvas.height\n  }\n\n  useEffect(() => {    \n    // どこの点をとるかの計算\n    let pointsList: PointsInfo[] = []\n\n    // 時間ごとにpointsに直していく\n    const ktToMPer60s = 30.8667 // x (kt) => ktToMPer60s * x (m/100s) で変換\n    props.windInfoList.forEach( info => {\n      let points: Point[] = []\n      let currentX = 0\n      let currentY = 0\n\n      info.winds.forEach( wind => {\n        const rad: number = wind.deg * (Math.PI / 180);\n        currentX += wind.spd * ktToMPer60s * Math.sin(rad)\n        currentY += wind.spd * ktToMPer60s * Math.cos(rad)\n        points.push({\n          x: currentX,\n          y: currentY\n        })\n      })\n\n      pointsList.push({\n        hours: info.hours,\n        minutes: info.minutes,\n        visible: info.visible,\n        points: points\n      })\n    })\n\n    console.log(props.windInfoList.map(d => d.winds) )\n\n    // 最も遠い点の距離の計算\n    const maxR = getRFrom(pointsList)\n\n    /*  */\n    const ctx: CanvasRenderingContext2D = getContext();\n    const originX: number = 240\n    const originY: number = 240\n\n    // scaleDistance * 3 = 144 になるように\n    const scaleDistance = getScaleDistanceFrom(maxR)\n\n    const scaleLine = 48\n    const scale = scaleLine / scaleDistance\n    console.log(\"maxR = \", maxR, \"scale\", scale, scaleDistance)\n\n    // 原点の描画\n    ctx.save();\n    ctx.strokeStyle = \"#707070\";\n    ctx.fillStyle = \"#707070\";\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, 2, 0, Math.PI * 2);\n    ctx.fill();\n\n    // 軸線の描画\n    const padding = 50\n    const canvasWidth = getCanvasWidth() - padding\n    const canvasHeight = getCanvasHeight() - padding\n    ctx.beginPath();\n    ctx.moveTo(padding, originY);\n    ctx.lineTo(canvasWidth, originY);\n    ctx.moveTo(originX, padding);\n    ctx.lineTo(originX, canvasHeight);\n    // 斜め線\n    ctx.moveTo(padding, padding);\n    ctx.lineTo(canvasWidth, canvasHeight);\n    ctx.moveTo(canvasWidth, padding);\n    ctx.lineTo(padding, canvasHeight);\n    ctx.stroke()\n\n    // scale円の描画\n    ctx.beginPath();\n    ctx.moveTo(originX, originY);\n    ctx.arc(originX, originY, scaleLine, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 2, 0, Math.PI * 2)\n    ctx.arc(originX, originY, scaleLine * 3, 0, Math.PI * 2)\n    ctx.stroke()\n\n    // scaleの描画\n    ctx.beginPath()\n    const scaleLineHeight = 10\n    ctx.moveTo(canvasWidth * 0.3, canvasHeight)\n    ctx.lineTo(canvasWidth * 0.3, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight + scaleLineHeight)\n    ctx.lineTo(canvasWidth * 0.3 + scaleLine, canvasHeight)\n    ctx.stroke()\n    ctx.restore();\n\n    // scaleのテキストの描画\n    ctx.save();\n    ctx.fillStyle = \"black\"\n    ctx.font = \"10px\"\n    ctx.textAlign = \"center\"\n    ctx.fillText(scaleDistance.toString() + 'm',\n      canvasWidth * 0.3 + scaleLine * 0.5,\n      canvasHeight + scaleLineHeight * 2.5)\n    ctx.restore()\n\n    //　各点のプロット\n    let numOfPoints = pointsList.length\n    console.log(pointsList)\n    const hueStep = Math.min(360 / numOfPoints, 40)\n    pointsList.forEach((data, index) => {\n      if (data.visible) {\n        const points = data.points\n        // 色の決定\n        const hue = Math.ceil(hueStep * index)\n        const hslStroke = \"hsl(\" + hue + \", 100%, 50%)\";\n        const hslFill = \"hsl(\" + hue + \", 80%, 45%)\";\n\n        // 一つの時間のpibaldataを描画\n        let x = originX\n        let y = originY\n        points.forEach(point => {\n          ctx.save();\n          ctx.strokeStyle = hslStroke;\n          ctx.fillStyle = hslFill;\n          ctx.beginPath();\n          ctx.moveTo(x, y);\n          x = originX + point.x * scale\n          y = originY - point.y * scale\n          ctx.lineTo(x, y);\n          ctx.stroke();\n          ctx.moveTo(x, y);\n          ctx.arc(x, y, 3, 0, Math.PI * 2);\n          ctx.fill();\n          ctx.restore();\n        })\n      }\n    })\n\n    // scaleのプロット\n  })\n\n  return (\n    <div className=\"rect-wrap\">\n      <canvas className=\"pibal-glaph\" ref={canvasRef} />\n    </div>\n  )\n\n}\n\n\n// pointsの集合であるpointsListから最大半径を求めるための関数\nfunction getRFrom(pointsList: PointsInfo[]): number {\n  const aryMax = function(a: number, b:number): number {return Math.max(a, b)}\n  return pointsList\n  .map(data => data.points.map(p => Math.hypot(p.x, p.y)).reduce(aryMax))\n  .reduce(aryMax, 1)\n}\n\n// scale円の単位距離を導出\nfunction getScaleDistanceFrom(maxR: number): number {\n  const oneThirdOfMaxR: number = Math.ceil(maxR / 3.2)\n  \n  // 3 * scale = maxDist / 1.1 になるようにする\n  const ScaleDistance = Math.max(Number(oneThirdOfMaxR.toPrecision(2)), 10)\n  return ScaleDistance\n}\n\nexport default Glaph","import React, { useEffect } from \"react\"  \nimport * as d3 from 'd3'\n\nexport type Arrow = {\n  length: number,\n  rad: number,\n  hue: number,\n}\n\ntype ArrowInfo = {\n  x0: number,\n  y0: number,\n  x1: number,\n  y1: number,\n  color: string\n}\n\nexport type Position = {\n  x: number,\n  y: number\n}\n\nfunction getInfoFrom(arrow: Arrow): ArrowInfo {\n  const cos = Math.cos(arrow.rad)\n  const sin = Math.sin(arrow.rad)\n  return {\n    x0: - arrow.length * sin / 2,\n    y0: arrow.length * cos / 2,\n    x1: arrow.length * sin / 2,\n    y1: - arrow.length * cos / 2,\n    color: `hsl(${arrow.hue},50%,50%)`\n  }\n}\n\nexport const ArrowLine: React.FC<{ arrow: Arrow, position: Position, id: string }> = ({ arrow, position, id}) => {  \n  const className = `arrow-${id}`\n  //d3-----------------------------  \n  useEffect(() => {\n    const g = d3.select(`.${className}`)\n    const info = getInfoFrom(arrow)\n\n    // defs/markerという構造で、gの下に矢印を定義\n    let marker =g.append(\"defs\").append(\"marker\")\n    .attr(\"id\", `arrowhead-${id}`)\n    .attr(\"refX\", 1)\n    .attr(\"refY\", 2)\n    .attr(\"markerWidth\", 4)\n    .attr(\"markerHeight\", 4)\n    .attr(\"orient\", \"auto\")\n\n    // 矢印の形をpathで定義\n    marker.append(\"path\")\n      .attr(\"d\", \"M 0,0 V 4 L4,2 Z\")\n      .attr(\"fill\", info.color)\n\n    let line = d3.line()\n    .x(data => data[0])\n    .y(data => data[1])\n\n    g.append('path')\n    .attr('d', line([[info.x0, info.y0],[info.x1, info.y1]])!)\n    .attr('stroke', info.color)\n    .attr('stroke-width', 2)\n    .attr('fill', 'none')\n    .attr('marker-end', `url(#arrowhead-${id})`)\n    .attr(\"transform\", `translate(${position.x}, ${position.y})`)  \n  })  \n  //-------------------------------  \n\n  return (  \n    <g className={className} key={id}></g>\n  )  \n}  ","import React from 'react'  \n\n// 縦、横を選択できるSVG。わざわざd3を使う必要ないと思って使わなかった。  \nconst Svg: React.FC<{ width: number, height: number }> = ({ children, width, height }) => (  \n  <svg style={{ width: width, height: height }}>  \n    {children}  \n  </svg>  \n)\n\nexport default Svg","import React from \"react\";\nimport { ArrowLine, Arrow, Position } from \"./ArrowLine\"\n\nimport { WindInfo } from \"../states/IPibalDataList\"\nimport Svg from \"./Svg\"\n\ninterface Props {\n  selectedId: number,\n  windInfoList: WindInfo[]\n}\n\nexport const Table: React.FC<Props> = (props) => {\n  if (!props.windInfoList.length) {\n    return null\n  }\n  \n  // 矢印の最小・最大長さ\n  const minLength = 4\n  const maxLength = 15\n\n  // min/max Lengthに対応するmin/max speed\n  const maxSpd = Math.max(...props.windInfoList.map(info => Math.max(...info.winds.map(w => w.spd))))\n  const minSpd = Math.min(...props.windInfoList.map(info => Math.min(...info.winds.map(w => w.spd))))\n\n  // 配置する位置を計算するための準備\n  const maxHeightIndex = Math.max(...props.windInfoList.map(info => info.winds.length))\n  const maxTimeIndex = props.windInfoList.length\n  const boxLengthPerArrow = 30 // 1つ1つの矢印の間隔\n  const offset = 10 // 端の矢印の表示のoffset\n\n  // 矢印の表示数による\n  const width = boxLengthPerArrow * maxTimeIndex\n  const height = boxLengthPerArrow * maxHeightIndex\n  let arrowLineIndex = 0\n\n  const spdToLength = (spd: number): number => { return minLength + (maxLength - minLength) / (maxSpd - minSpd) * spd}\n\n  return (  \n    <Svg width={width} height={height}>\n      {props.windInfoList.map((info, timeIndex) => {\n        const winds = info.winds\n        return winds.map((wind, windIndex) => {\n          arrowLineIndex ++\n          const arrow: Arrow = {\n            length: spdToLength(wind.spd),\n            rad: wind.deg / 180 * Math.PI,\n            hue: wind.deg\n          }\n          const position: Position = {\n            x: boxLengthPerArrow * timeIndex + offset,\n            y: height - boxLengthPerArrow * windIndex - offset\n          }\n          return <ArrowLine arrow={arrow} position={position} id={`${props.selectedId}-${arrowLineIndex}`} key={arrowLineIndex}/>\n        })\n      })}\n    </Svg>  \n  )  \n}","import React from 'react'\nimport { TopPageHandler } from '../containers/TopPageContainer';\nimport SelectList from './SelectList'\nimport Glaph from './Glaph'\nimport { PibalDataInfo, DateInfo } from '../states/IPibalDataList'\nimport { Table } from './Table';\n\ninterface OwnProps {\n\ttoken: string\n\tloading: boolean\n\tfetchingDates: boolean\n\tfetchingPibalData: boolean\n  scale: number\n  selected?: PibalDataInfo\n  dateInfoList: DateInfo[]\n}\ntype Props = OwnProps & TopPageHandler\nexport class TopPageForm extends React.Component<Props> {\n\tcomponentDidMount() {\n\t\tif (this.props.token) {\n\t\t\tif (this.props.dateInfoList.length === 0) {\n\t\t\t\t// dateInfoListがからのとき、APIを叩く\n\t\t\t\tconsole.log(\"fetch LoadDates\")\n\t\t\t\tthis.props.handleOnLoadDates()\n\t\t\t}\n\t\t}\n\t}\n\n\trender() {\n\t\treturn (\n\t\t\t<React.Fragment>\n\t\t\t\t<SelectList dateInfoList={this.props.dateInfoList} onChange={this.props.handleOnChangeValue}/>\n\t\t\t\t{(() => {\n\t\t\t\t\tif (this.props.selected) {\n\t\t\t\t\t\treturn (\n\t\t\t\t\t\t\t<div>\n\t\t\t\t\t\t\t\t<Glaph windInfoList={this.props.selected.windInfoList}/>\n\t\t\t\t\t\t\t\t<Table selectedId={this.props.selected.id} windInfoList={this.props.selected.windInfoList}/>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t)\n\t\t\t\t\t}\n\t\t\t\t})()}\n\t\t\t\t{/* <ShowState inputValue={this.props.inputValue} selectedValue={this.props.selectedValue} clickCount={this.props.clickCount} /> */}\n\n\t\t\t</React.Fragment>\n\t\t)\n\t}\n}","import { connect } from \"react-redux\";\nimport { Dispatch } from \"redux\";\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction } from \"../actions/index\";\nimport { StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, FinishFetchPibalDataAction, SetDateInfoListAction, SetCurrentWindInfoListAction } from \"../actions/index\";\nimport { TopPageForm } from \"../components/TopPageForm\";\nimport { AppState } from \"../store\"\nimport { DateInfo, WindInfo, Wind } from \"./../states/IPibalDataList\"\n\ntype WindApi = {\n\theight: number,\n\tdegree: number,\n\tspeed: number\n}\n\ntype ApiData = {\n\thours: number\n\tminutes: number\n\twinds: WindApi[]\n}\n\ntype ApiDateAndTiming = {\n\tdate: string\n\ttiming: string\n}\n\n\nexport interface TopPageHandler {\n\thandleClickEnlargeButton(): void\n\thandleClickShrinkButton(): void\n\thandleOnChangeValue(value: number): void\n\thandleOnSelectToggleButton(value: number): void\n\thandleOnLoadDates(): void\n}\n\nconst mapStateToProps = (appState: AppState) => {\n\treturn {\n\t\ttoken: appState.state.token,\n\t\tfetchingDates: appState.state.fetchingDates,\n\t\tfetchingPibalData: appState.state.fetchingPibalData,\n\t\tscale: appState.state.scale,\n\t\tselected: appState.state.selected,\n\t\tdateInfoList: appState.state.dateInfoList\n\t}\n}\n\nconst mapDispatchToProps = (dispatch: Dispatch): TopPageHandler => {\n\treturn {\n\t\thandleClickEnlargeButton: () => { dispatch(EnlargeAction()) },\n\t\thandleClickShrinkButton: () => { dispatch(ShirinkAction()) },\n\t\thandleOnChangeValue: (value: number) => { dispatch(SelectFlightAction(value)) },\n\t\thandleOnSelectToggleButton: (value: number) => { dispatch(ToggleVisibleAction(value)) },\n\t\thandleOnLoadDates: () => { dispatch(StartFetchDatesAction()) },\n\t}\n}\nexport default connect(mapStateToProps, mapDispatchToProps)(TopPageForm)\nexport function getYYYYMMDD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + m + d\n  return result\n}\n\nexport function getYYYY_MM_DD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + \"/\" + m + \"/\" + d\n  return result\n}","import React from 'react';\nimport './App.css';\nimport { HashRouter, Switch, Route } from 'react-router-dom';\nimport { ConnectedRouter } from 'connected-react-router';\n// import Term from './containers/auth/Term';\n// import Info from './containers/auth/Info';\nimport Auth from './containers/auth/Auth';\nimport Login from './containers/auth/Login';\nimport history from './common/history';\n\nimport TopPageContainer from './containers/TopPageContainer';\n\nconst App: React.FC = () => {\n  return (\n    <ConnectedRouter history={history}>\n      <Switch>\n        <Route path=\"/login\" component={Login} />\n        <Auth>\n          <Route exact path=\"/\" component={TopPageContainer} />\n        </Auth>\n      </Switch>\n    </ConnectedRouter>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import { reducerWithInitialState } from '../node_modules/typescript-fsa-reducers';\nimport { EnlargeAction, ShirinkAction, ToggleVisibleAction, SelectFlightAction, SetCurrentWindInfoListAction } from './actions/index';\nimport { LoginAction, StartLoadingAction, FinishLoadingAction, StartCreateTokenAction, FinishCreateTokenAction, InputPassAction, InputUserAction, StartFetchDatesAction, FinishFetchDatesAction, StartFetchPibalDataAction, FinishFetchPibalDataAction} from './actions/index'\nimport { SetDateInfoListAction } from './actions/index';\nimport IState from './states/IState'\nimport { PibalDataInfo } from './states/IPibalDataList'\n\nexport const initialState: IState = {\n\tlogin: false,\n\ttoken: \"\",\n\tusername: \"\",\n  password: \"\",\n\tloading: false,\n\tcreatingToken: false,\n\tfetchingDates: false,\n\tfetchingPibalData: false,\n\thasError: false,\n\tscale: 1,\n\tselected: undefined,\n\tdateInfoList: []\n}\n\nexport type ApiData = {\n\thours: number\n  minutes: number\n  winds: WindApi[]\n}\n\ntype WindApi = {\n  height: number,\n  degree: number,\n  speed: number\n}\n\n\nconst maxScale = 2\nconst minScale = 0.5\n\nexport const Reducer = reducerWithInitialState(initialState)\n\t.case(StartLoadingAction, (state) => {\n\t\tconst loading = true\n\t\treturn { ...state, loading }\n\t})\n\t.case(FinishLoadingAction, (state) => {\n\t\tconst loading = false\n\t\treturn { ...state, loading }\n\t})\n\t.case(StartCreateTokenAction, state => {\n\t\tconst creatingToken = true\n\t\treturn { ...state, creatingToken }\n\t})\n\t.case(FinishCreateTokenAction, state => {\n\t\tconst creatingToken = false\n\t\treturn { ...state, creatingToken }\n\t})\n\t.case(InputUserAction, (state, username) => {\n\t\treturn { ...state, username }\n\t})\n\t.case(InputPassAction, (state, password) => {\n\t\treturn { ...state, password }\n\t})\n\t.case(StartFetchDatesAction, state => {\n\t\tconst fetchingDates = true\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(FinishFetchDatesAction, state => {\n\t\tconst fetchingDates = false\n\t\treturn { ...state, fetchingDates}\n\t})\n\t.case(StartFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = true\n\t\treturn { ...state, fetchingPibalData }\n\t})\n\t.case(FinishFetchPibalDataAction, state => {\n\t\tconst fetchingPibalData = false\n\t\treturn { ...state, fetchingPibalData}\n\t})\n\t// 拡大する\n\t.case(EnlargeAction, (state) => {\n\t\tlet scale = Math.min(state.scale + 0.1, maxScale)\n\t\treturn { ...state, scale }\n\t})\n\t// 縮小する\n\t.case(ShirinkAction, (state) => {\n\t\tlet scale = Math.max(state.scale - 0.1, minScale)\n\t\treturn { ...state, scale }\n\t})\n\t// Datesを取ってきてstateに入れる。\n\t.case(SetDateInfoListAction, (state, dateInfoList) => {\n\t\treturn { ...state, dateInfoList }\n\t})\n\t// pibalDateを取ってきてcurrentに入れる。\n\t.case(SetCurrentWindInfoListAction, (state, selected) => {\n\t\treturn { ...state, selected }\n\t})\n\t// そのパイバルデータを見せる or 見せない\n\t.case(ToggleVisibleAction, (state, pibalIndex) => {\n\t\tlet selected = state.selected\n\t\tif (selected) {\n\t\t\tlet currentVisible = selected.windInfoList[pibalIndex].visible\n\t\t\tselected.windInfoList[pibalIndex].visible = !currentVisible\n\t\t\treturn { ...state, selected}\n\t\t}\n\t\treturn state\n\t})\n\t// login\n\t.case(LoginAction, (state, token) => {\n\t\tconst login = true\n\t\tconsole.log(\"Login Action\", login, token)\n\t\treturn { ...state, login, token } \n\t})\n\t.build()","import { DateInfo, WindInfo, Wind } from \"./../states/IPibalDataList\"\n\ntype WindApi = {\n\theight: number,\n\tdegree: number,\n\tspeed: number\n}\n\ntype ApiData = {\n\thours: number\n\tminutes: number\n\twinds: WindApi[]\n}\n\ntype ApiDateAndTiming = {\n\tdate: string\n\ttiming: string\n}\n\nexport function authorize(user: string, pass: string): Promise<{token?: string, error?: string}> {\n  const body = JSON.stringify({postUser: user, postPass: pass})\n  console.log(\"authorize\", body)\n\n  return fetch(\"https://oval-silicon-280513.an.r.appspot.com/api/v1/authenticate\", {\n    method: \"POST\",\n    mode: \"cors\",\n    cache: \"no-cache\",\n    credentials: \"omit\",\n    headers:{\n      'content-type': 'application/json; charset=UTF-8'\n    },\n    body})\n    .then(res => res.json())\n    .then(json => {\n      if (json.success) {\n        localStorage.setItem(\"auth_token\", json.token)\n        return { token: json.token }\n      }\n      return { error: 'such user is not exist'}\n    })\n    .catch(error => {\n      console.log('fetch error: ', error)\n      return { error }\n    })\n}\n\nexport function fetchDetes(token: string): Promise<{dateList?: DateInfo[], error?: string}> {\n  return fetch('https://oval-silicon-280513.an.r.appspot.com/api/v1/dates', {\n    headers: { 'x-access-token': token }\n  }).then(res => res.json())\n  .then(obj => {\n    const apiDateList: ApiDateAndTiming[] = obj.data\n    let dateList: DateInfo[] = apiDateList.map((apiDate, index) => {\n      return {\n        id: index,\n        date: getDateFrom(apiDate.date),\n        timePeriod: apiDate.timing\n      }\n    })\n    dateList.sort((a, b) => b.date.getTime() - a.date.getTime())\n    return { dateList }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nexport function fetchWindInfo(token: string, date: Date, timePeriod: string): Promise<{windInfoList?: WindInfo[], error?: string}> {\n  const yyyymmdd = getYYYYMMDD(date)\n  return fetch(`https://oval-silicon-280513.an.r.appspot.com/api/v1/${yyyymmdd}/${timePeriod}`, {\n\t\theaders: { 'x-access-token': token }\n  })\n  .then(res => res.json())\n  .then(obj => {\n    if (obj.data.length) {\n      const windInfoList: WindInfo[] = []\n      const infos: ApiData[] = obj.data[0].infos\n      infos.forEach(info => {\n\t\t\t\tconst hours = info.hours\n\t\t\t\tconst minutes = info.minutes\n\t\t\t\tconst winds: Wind[] = info.winds.map(w => {\n\t\t\t\t\treturn {\n\t\t\t\t\t\talt: w.height,\n\t\t\t\t\t\tdeg: w.degree,\n\t\t\t\t\t\tspd: w.speed\n\t\t\t\t\t}\n\t\t\t\t})\n\t\t\t\twindInfoList.push({\n\t\t\t\t\thours: hours,\n\t\t\t\t\tminutes: minutes,\n\t\t\t\t\twinds: winds,\n\t\t\t\t\tvisible: true\n\t\t\t\t})\n      })\n      return { windInfoList }\n    }\n    return { error: 'no such data' }\n  })\n  .catch(error => {\n    return { error }\n  })\n}\n\nfunction getYYYYMMDD(date: Date):string {\n\tconst y = date.getFullYear().toString()\n\tconst m = (\"00\" + date.getMonth()).slice(-2)\n\tconst d = (\"00\" + date.getDate()).slice(-2)\n  const result = y + m + d\n  return result\n}\n\nfunction getDateFrom(yyyymmdd: string): Date {\n\tconst year = Number(yyyymmdd.slice(0, 4))\n\tconst month = Number(yyyymmdd.slice(4, 6))\n\tconst day = Number(yyyymmdd.slice(6))\n\treturn new Date(year, month, day)\n}","import { AppState } from '../store'\nimport { DateInfo } from '../states/IPibalDataList'\n\nexport const getToken = (state: AppState): string => state.state.token\n\nexport const getUsername = (state: AppState): string => state.state.username\n\nexport const getPassword = (state: AppState): string => state.state.password\n\nexport const getDateInfoList = (state: AppState): DateInfo[] => state.state.dateInfoList","import { push } from 'react-router-redux'\nimport { take, put, fork, call, select, takeEvery } from 'redux-saga/effects'\nimport { authorize, fetchDetes, fetchWindInfo } from './common/api'\nimport { REQUEST_LOGIN, START_CREATE_TOKEN, FINISH_CREATE_TOKEN, START_FETCH_DATES, FINISH_FETCH_DATES, SET_DATES, SELECT_FLIGHT, SET_WIND } from './actions'\nimport { getToken, getUsername, getPassword, getDateInfoList } from './selectors'\nimport { DateInfo, PibalDataInfo } from './states/IPibalDataList'\n\nfunction* authSaga() {\n  while (true) {\n    yield take(START_CREATE_TOKEN)\n    \n    const username = yield select(getUsername)\n    const password = yield select(getPassword)\n\n    const { token, error } = yield call(authorize, username, password)\n\n    console.log(`action${START_CREATE_TOKEN}, user: ${username}, pass: ${password}, token: ${token}, error: ${error}`)\n\n    if (!token && error) {\n      yield put({ type: FINISH_CREATE_TOKEN })\n      continue; // 認証に失敗したらリトライに備えて最初に戻る\n    }\n\n    if (token) {\n      yield put({ type: REQUEST_LOGIN, payload: token })\n      yield put({ type: FINISH_CREATE_TOKEN });\n    }\n  }\n}\n\nfunction* pageSaga() {\n  while (true) {\n    // ログイン成功するまでずっと待つ\n    yield take(FINISH_CREATE_TOKEN)\n    // ページを移動する\n    yield put(push('/'))\n  }\n}\n\nfunction* fetchDatesSaga() {\n  const token = yield select(getToken)\n  const { dateList, error } = yield call(fetchDetes, token)\n\n  console.log(`action: ${START_FETCH_DATES}, dateList: ${dateList}, error: ${error}`)\n\n  if (!dateList && error) {\n    yield put({ type: FINISH_FETCH_DATES })\n    yield put(push('/'))\n  }\n\n  if (dateList) {\n    yield put({ type: SET_DATES, payload: dateList })\n    yield put({ type: FINISH_FETCH_DATES })\n    yield put({ type: SELECT_FLIGHT, payload: 0 })\n  }\n}\n\nfunction* selectFlightSaga() {\n  while(true) {\n    const action = yield take(SELECT_FLIGHT)\n    const id = action.payload\n    const token = yield select(getToken)\n    const dateInfoList = yield select(getDateInfoList)\n    const dateInfo: DateInfo = dateInfoList[id]\n\n    const { windInfoList, error } = yield call(fetchWindInfo, token, dateInfo.date, dateInfo.timePeriod)\n\n    if (!windInfoList && error) {\n      yield put(push('/'))\n    }\n\n    if (windInfoList) {\n      const pibalDataInfo: PibalDataInfo = {\n        id: id,\n        date: dateInfo.date,\n        timePeriod: dateInfo.timePeriod,\n        windInfoList: windInfoList\n      } \n      console.log(windInfoList)\n      yield put({type: SET_WIND, payload: pibalDataInfo })\n    }\n  }\n}\n\nexport default function* rootSaga() {\n  yield fork(authSaga);\n  yield fork(pageSaga);\n  yield takeEvery(START_FETCH_DATES, fetchDatesSaga)\n  yield fork(selectFlightSaga)\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\nimport configureStore from './store';\n\nconst store = configureStore()\n\nReactDOM.render(\n  <Provider store={store}>\n      <App />\n  </Provider>\n  , document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { combineReducers, createStore, compose, applyMiddleware} from 'redux'\nimport createSagaMiddleware from 'redux-saga';\nimport IState from './states/IState'\nimport { Reducer } from './reducer'\nimport rootSaga from './sagas'\nimport logger from 'redux-logger'\nimport history from './common/history'\n// import createHistory from 'history/createHashHistory';\nimport { routerMiddleware, connectRouter, RouterState } from 'connected-react-router'\n\nexport type AppState = {\n  state: IState\n  router: RouterState\n}\n\nexport default function configureStore(initialState?: AppState) {\n  const sagaMiddleware = createSagaMiddleware();\n  const store = createStore(\n    combineReducers<AppState>({\n      state: Reducer,\n      router: connectRouter(history)\n    }),\n    initialState,\n    applyMiddleware(\n      sagaMiddleware, logger, routerMiddleware(history)\n    )\n  );\n  sagaMiddleware.run(rootSaga);\n  return store;\n};"],"sourceRoot":""}