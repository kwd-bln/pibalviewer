.App {
  text-align: center;
}
.App-header {
  background-color: #282c34;
  min-height: 100vh;
  display: flex;
  flex-direction: column;
  align-items: center;
  justify-content: center;
  font-size: calc(10px + 2vmin);
  color: white;
}

.pibal-glaph {
  position: relative;
  top: 0;
  left: 0;
  width: 100%;
  overflow-x: hidden;
}

canvas {
  overflow-x: hidden;
}

.dates-select {
  width: 80%;
  max-width: 500px;
  margin: 0 auto;
  margin-top: 10px;
  margin-bottom: 30px;
}

.nav-item.nav-link {
  background-color: white;
  color: skyblue;
  border-color: #e2e2e2;
}

.nav-item.nav-link:hover {
  background-color: rgba(162, 229, 255, 0.1);
  color: skyblue;
  border-color: #e2e2e2;
}

.nav-item.nav-link.active {
  background-color: skyblue;
  color: white;
  border-color: #e2e2e2
}

.myButtonClass {
  position: absolute;
  bottom: 10%;
  right: 30px;
}

.my-button {
  margin: 10px 0;
  background-color: rgba(113, 215, 255, 0.8);
  color: white;
  border-color: rgba(113, 215, 255, 0.4);
  font-family: sans-serif;
  font-weight: bold;
  font-size: medium;
}

.my-button:active {
  background-color: rgb(6, 23, 255) !important;
  color: white !important;
  border-color: rgba(124, 9, 255, 0.7) !important;
}

.my-button:hover {
  background-color: rgba(113, 215, 255, 0.8);
  color: white;
  border-color: rgba(113, 215, 255, 0.4);
}

.my-button:focus {
  background-color: rgba(113, 215, 255, 0.8);
  border-color: rgba(113, 215, 255, 0.4);
  outline: none !important;
  box-shadow:none !important;
}

.my-tab {
  outline: none !important;
  box-shadow:none !important;
}

.row {
  width: 100%;
  margin: 0px;
}

body {
  overflow-x: hidden;
}

// .custom-control-label::before ,.custom-control-label::after{
//   width:25px;
//   height:20px;
// }

// .custom-switch .custom-control-label::after {
//   width:16px;
//   height:16px;
// }

.custom-switch {
  width:50px;
  height:50px;

}

$font-size-base: 1rem;
$font-size-lg: ($font-size-base * 1.25);
$font-size-sm: ($font-size-base * .875);
$input-height: 2.375rem;
$input-height-sm: 1.9375rem;
$input-height-lg: 3rem;
$input-btn-focus-width: .2rem;
$custom-control-indicator-bg: #dee2e6;
$custom-control-indicator-disabled-bg: #e9ecef;
$custom-control-description-disabled-color: #868e96;
$white: white;
$theme-colors: (
  'primary': #08d
);

//
// These variables can be used to customize the switch component.
//
$switch-height: calc(#{$input-height} * .8) !default;
$switch-height-sm: calc(#{$input-height-sm} * .8) !default;
$switch-height-lg: calc(#{$input-height-lg} * .8) !default;
$switch-border-radius: $switch-height !default;
$switch-bg: $custom-control-indicator-bg !default;
$switch-checked-bg: map-get($theme-colors, 'primary') !default;
$switch-disabled-bg: $custom-control-indicator-disabled-bg !default;
$switch-disabled-color: $custom-control-description-disabled-color !default;
$switch-thumb-bg: $white !default;
$switch-thumb-border-radius: 50% !default;
$switch-thumb-padding: 2px !default;
$switch-focus-box-shadow: 0 0 0 $input-btn-focus-width rgba(map-get($theme-colors, 'primary'), .25);
$switch-transition: .2s all !default;

.switch {
  font-size: $font-size-base;
  position: relative;

  input {
    position: absolute;
    height: 1px;
    width: 1px;
    background: none;
    border: 0;
    clip: rect(0 0 0 0);
    clip-path: inset(50%);
    overflow: hidden;
    padding: 0;

    + label {
      position: relative;
      min-width: calc(#{$switch-height} * 2);
      border-radius: $switch-border-radius;
      height: $switch-height;
      line-height: $switch-height;
      display: inline-block;
      cursor: pointer;
      outline: none;
      user-select: none;
      vertical-align: middle;
      text-indent: calc(calc(#{$switch-height} * 2) + .5rem);
    }

    + label::before,
    + label::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: calc(#{$switch-height} * 2);
      bottom: 0;
      display: block;
    }

    + label::before {
      right: 0;
      background-color: $switch-bg;
      border-radius: $switch-border-radius;
      transition: $switch-transition;
    }

    + label::after {
      top: $switch-thumb-padding;
      left: $switch-thumb-padding;
      width: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      height: calc(#{$switch-height} - calc(#{$switch-thumb-padding} * 2));
      border-radius: $switch-thumb-border-radius;
      background-color: $switch-thumb-bg;
      transition: $switch-transition;
    }

    &:checked + label::before {
      background-color: $switch-checked-bg;
    }

    &:checked + label::after {
      margin-left: $switch-height;
    }

    &:focus + label::before {
      outline: none;
      box-shadow: $switch-focus-box-shadow;
    }

    &:disabled + label {
      color: $switch-disabled-color;
      cursor: not-allowed;
    }

    &:disabled + label::before {
      background-color: $switch-disabled-bg;
    }
  }
  + .switch {
    margin-left: 1rem;
  }
}


@media only screen and (min-width : 576px) {
  /* デスクトップ表示ではホバー操作でドロップダウンを表示 */
  .button-wrap {
    position: absolute;
    margin: auto;
    top: 50%;
    transform: translateY(-50%);
  }  
}

.button-wrap {
  width: 200px;
}

.form-group {
  margin-bottom: 0;
}
